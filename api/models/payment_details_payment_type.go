// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PaymentDetailsPaymentType payment details payment type
//
// swagger:model PaymentDetailsPaymentType
type PaymentDetailsPaymentType string

const (

	// PaymentDetailsPaymentTypeCreditCard captures enum value "CreditCard"
	PaymentDetailsPaymentTypeCreditCard PaymentDetailsPaymentType = "CreditCard"

	// PaymentDetailsPaymentTypePaypal captures enum value "Paypal"
	PaymentDetailsPaymentTypePaypal PaymentDetailsPaymentType = "Paypal"

	// PaymentDetailsPaymentTypeDirectDebig captures enum value "DirectDebig"
	PaymentDetailsPaymentTypeDirectDebig PaymentDetailsPaymentType = "DirectDebig"

	// PaymentDetailsPaymentTypeInvoice captures enum value "Invoice"
	PaymentDetailsPaymentTypeInvoice PaymentDetailsPaymentType = "Invoice"
)

// for schema
var paymentDetailsPaymentTypeEnum []interface{}

func init() {
	var res []PaymentDetailsPaymentType
	if err := json.Unmarshal([]byte(`["CreditCard","Paypal","DirectDebig","Invoice"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		paymentDetailsPaymentTypeEnum = append(paymentDetailsPaymentTypeEnum, v)
	}
}

func (m PaymentDetailsPaymentType) validatePaymentDetailsPaymentTypeEnum(path, location string, value PaymentDetailsPaymentType) error {
	if err := validate.EnumCase(path, location, value, paymentDetailsPaymentTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this payment details payment type
func (m PaymentDetailsPaymentType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePaymentDetailsPaymentTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
