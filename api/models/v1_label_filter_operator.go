// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1LabelFilterOperator v1 label filter operator
//
// swagger:model v1LabelFilterOperator
type V1LabelFilterOperator string

const (

	// V1LabelFilterOperatorEQ captures enum value "EQ"
	V1LabelFilterOperatorEQ V1LabelFilterOperator = "EQ"

	// V1LabelFilterOperatorNE captures enum value "NE"
	V1LabelFilterOperatorNE V1LabelFilterOperator = "NE"

	// V1LabelFilterOperatorRM captures enum value "RM"
	V1LabelFilterOperatorRM V1LabelFilterOperator = "RM"

	// V1LabelFilterOperatorNM captures enum value "NM"
	V1LabelFilterOperatorNM V1LabelFilterOperator = "NM"
)

// for schema
var v1LabelFilterOperatorEnum []interface{}

func init() {
	var res []V1LabelFilterOperator
	if err := json.Unmarshal([]byte(`["EQ","NE","RM","NM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1LabelFilterOperatorEnum = append(v1LabelFilterOperatorEnum, v)
	}
}

func (m V1LabelFilterOperator) validateV1LabelFilterOperatorEnum(path, location string, value V1LabelFilterOperator) error {
	if err := validate.EnumCase(path, location, value, v1LabelFilterOperatorEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 label filter operator
func (m V1LabelFilterOperator) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1LabelFilterOperatorEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 label filter operator based on context it is used
func (m V1LabelFilterOperator) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
