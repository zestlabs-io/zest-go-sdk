// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AccountAccountStatus account account status
//
// swagger:model AccountAccountStatus
type AccountAccountStatus string

func NewAccountAccountStatus(value AccountAccountStatus) *AccountAccountStatus {
	v := value
	return &v
}

const (

	// AccountAccountStatusPENDING captures enum value "PENDING"
	AccountAccountStatusPENDING AccountAccountStatus = "PENDING"

	// AccountAccountStatusACTIVE captures enum value "ACTIVE"
	AccountAccountStatusACTIVE AccountAccountStatus = "ACTIVE"

	// AccountAccountStatusDISABLED captures enum value "DISABLED"
	AccountAccountStatusDISABLED AccountAccountStatus = "DISABLED"

	// AccountAccountStatusDELETED captures enum value "DELETED"
	AccountAccountStatusDELETED AccountAccountStatus = "DELETED"
)

// for schema
var accountAccountStatusEnum []interface{}

func init() {
	var res []AccountAccountStatus
	if err := json.Unmarshal([]byte(`["PENDING","ACTIVE","DISABLED","DELETED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		accountAccountStatusEnum = append(accountAccountStatusEnum, v)
	}
}

func (m AccountAccountStatus) validateAccountAccountStatusEnum(path, location string, value AccountAccountStatus) error {
	if err := validate.EnumCase(path, location, value, accountAccountStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this account account status
func (m AccountAccountStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAccountAccountStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this account account status based on context it is used
func (m AccountAccountStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
