// Code generated by go-swagger; DO NOT EDIT.

package distr_config_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zestlabs-io/zest-go-sdk/api/models"
)

// DistrConfigServiceAssignPoolsToAppReader is a Reader for the DistrConfigServiceAssignPoolsToApp structure.
type DistrConfigServiceAssignPoolsToAppReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DistrConfigServiceAssignPoolsToAppReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDistrConfigServiceAssignPoolsToAppOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDistrConfigServiceAssignPoolsToAppNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDistrConfigServiceAssignPoolsToAppDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDistrConfigServiceAssignPoolsToAppOK creates a DistrConfigServiceAssignPoolsToAppOK with default headers values
func NewDistrConfigServiceAssignPoolsToAppOK() *DistrConfigServiceAssignPoolsToAppOK {
	return &DistrConfigServiceAssignPoolsToAppOK{}
}

/*DistrConfigServiceAssignPoolsToAppOK handles this case with default header values.

A successful response.
*/
type DistrConfigServiceAssignPoolsToAppOK struct {
	Payload *models.DistrconfigAssignPoolsToAppResponse
}

func (o *DistrConfigServiceAssignPoolsToAppOK) Error() string {
	return fmt.Sprintf("[POST /api/distribution/v1/app/pools/assign][%d] distrConfigServiceAssignPoolsToAppOK  %+v", 200, o.Payload)
}

func (o *DistrConfigServiceAssignPoolsToAppOK) GetPayload() *models.DistrconfigAssignPoolsToAppResponse {
	return o.Payload
}

func (o *DistrConfigServiceAssignPoolsToAppOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DistrconfigAssignPoolsToAppResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDistrConfigServiceAssignPoolsToAppNotFound creates a DistrConfigServiceAssignPoolsToAppNotFound with default headers values
func NewDistrConfigServiceAssignPoolsToAppNotFound() *DistrConfigServiceAssignPoolsToAppNotFound {
	return &DistrConfigServiceAssignPoolsToAppNotFound{}
}

/*DistrConfigServiceAssignPoolsToAppNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type DistrConfigServiceAssignPoolsToAppNotFound struct {
	Payload string
}

func (o *DistrConfigServiceAssignPoolsToAppNotFound) Error() string {
	return fmt.Sprintf("[POST /api/distribution/v1/app/pools/assign][%d] distrConfigServiceAssignPoolsToAppNotFound  %+v", 404, o.Payload)
}

func (o *DistrConfigServiceAssignPoolsToAppNotFound) GetPayload() string {
	return o.Payload
}

func (o *DistrConfigServiceAssignPoolsToAppNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDistrConfigServiceAssignPoolsToAppDefault creates a DistrConfigServiceAssignPoolsToAppDefault with default headers values
func NewDistrConfigServiceAssignPoolsToAppDefault(code int) *DistrConfigServiceAssignPoolsToAppDefault {
	return &DistrConfigServiceAssignPoolsToAppDefault{
		_statusCode: code,
	}
}

/*DistrConfigServiceAssignPoolsToAppDefault handles this case with default header values.

An unexpected error response
*/
type DistrConfigServiceAssignPoolsToAppDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the distr config service assign pools to app default response
func (o *DistrConfigServiceAssignPoolsToAppDefault) Code() int {
	return o._statusCode
}

func (o *DistrConfigServiceAssignPoolsToAppDefault) Error() string {
	return fmt.Sprintf("[POST /api/distribution/v1/app/pools/assign][%d] DistrConfigService_AssignPoolsToApp default  %+v", o._statusCode, o.Payload)
}

func (o *DistrConfigServiceAssignPoolsToAppDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *DistrConfigServiceAssignPoolsToAppDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
