// Code generated by go-swagger; DO NOT EDIT.

package distr_config_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zestlabs-io/zest-go-sdk/api/models"
)

// DistrConfigServiceAssignAppToUsersReader is a Reader for the DistrConfigServiceAssignAppToUsers structure.
type DistrConfigServiceAssignAppToUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DistrConfigServiceAssignAppToUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDistrConfigServiceAssignAppToUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDistrConfigServiceAssignAppToUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDistrConfigServiceAssignAppToUsersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDistrConfigServiceAssignAppToUsersOK creates a DistrConfigServiceAssignAppToUsersOK with default headers values
func NewDistrConfigServiceAssignAppToUsersOK() *DistrConfigServiceAssignAppToUsersOK {
	return &DistrConfigServiceAssignAppToUsersOK{}
}

/*DistrConfigServiceAssignAppToUsersOK handles this case with default header values.

A successful response.
*/
type DistrConfigServiceAssignAppToUsersOK struct {
	Payload *models.DistrconfigAssignAppToUsersResponse
}

func (o *DistrConfigServiceAssignAppToUsersOK) Error() string {
	return fmt.Sprintf("[POST /api/distribution/v1/app/users/assign][%d] distrConfigServiceAssignAppToUsersOK  %+v", 200, o.Payload)
}

func (o *DistrConfigServiceAssignAppToUsersOK) GetPayload() *models.DistrconfigAssignAppToUsersResponse {
	return o.Payload
}

func (o *DistrConfigServiceAssignAppToUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DistrconfigAssignAppToUsersResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDistrConfigServiceAssignAppToUsersNotFound creates a DistrConfigServiceAssignAppToUsersNotFound with default headers values
func NewDistrConfigServiceAssignAppToUsersNotFound() *DistrConfigServiceAssignAppToUsersNotFound {
	return &DistrConfigServiceAssignAppToUsersNotFound{}
}

/*DistrConfigServiceAssignAppToUsersNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type DistrConfigServiceAssignAppToUsersNotFound struct {
	Payload string
}

func (o *DistrConfigServiceAssignAppToUsersNotFound) Error() string {
	return fmt.Sprintf("[POST /api/distribution/v1/app/users/assign][%d] distrConfigServiceAssignAppToUsersNotFound  %+v", 404, o.Payload)
}

func (o *DistrConfigServiceAssignAppToUsersNotFound) GetPayload() string {
	return o.Payload
}

func (o *DistrConfigServiceAssignAppToUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDistrConfigServiceAssignAppToUsersDefault creates a DistrConfigServiceAssignAppToUsersDefault with default headers values
func NewDistrConfigServiceAssignAppToUsersDefault(code int) *DistrConfigServiceAssignAppToUsersDefault {
	return &DistrConfigServiceAssignAppToUsersDefault{
		_statusCode: code,
	}
}

/*DistrConfigServiceAssignAppToUsersDefault handles this case with default header values.

An unexpected error response
*/
type DistrConfigServiceAssignAppToUsersDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the distr config service assign app to users default response
func (o *DistrConfigServiceAssignAppToUsersDefault) Code() int {
	return o._statusCode
}

func (o *DistrConfigServiceAssignAppToUsersDefault) Error() string {
	return fmt.Sprintf("[POST /api/distribution/v1/app/users/assign][%d] DistrConfigService_AssignAppToUsers default  %+v", o._statusCode, o.Payload)
}

func (o *DistrConfigServiceAssignAppToUsersDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *DistrConfigServiceAssignAppToUsersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
