// Code generated by go-swagger; DO NOT EDIT.

package distr_config_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zestlabs-io/zest-go-sdk/api/models"
)

// DistrConfigServiceGetPoolReader is a Reader for the DistrConfigServiceGetPool structure.
type DistrConfigServiceGetPoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DistrConfigServiceGetPoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDistrConfigServiceGetPoolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDistrConfigServiceGetPoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDistrConfigServiceGetPoolDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDistrConfigServiceGetPoolOK creates a DistrConfigServiceGetPoolOK with default headers values
func NewDistrConfigServiceGetPoolOK() *DistrConfigServiceGetPoolOK {
	return &DistrConfigServiceGetPoolOK{}
}

/*DistrConfigServiceGetPoolOK handles this case with default header values.

A successful response.
*/
type DistrConfigServiceGetPoolOK struct {
	Payload *models.DistrconfigGetPoolResponse
}

func (o *DistrConfigServiceGetPoolOK) Error() string {
	return fmt.Sprintf("[GET /api/distribution/v1/pool/{id}][%d] distrConfigServiceGetPoolOK  %+v", 200, o.Payload)
}

func (o *DistrConfigServiceGetPoolOK) GetPayload() *models.DistrconfigGetPoolResponse {
	return o.Payload
}

func (o *DistrConfigServiceGetPoolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DistrconfigGetPoolResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDistrConfigServiceGetPoolNotFound creates a DistrConfigServiceGetPoolNotFound with default headers values
func NewDistrConfigServiceGetPoolNotFound() *DistrConfigServiceGetPoolNotFound {
	return &DistrConfigServiceGetPoolNotFound{}
}

/*DistrConfigServiceGetPoolNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type DistrConfigServiceGetPoolNotFound struct {
	Payload string
}

func (o *DistrConfigServiceGetPoolNotFound) Error() string {
	return fmt.Sprintf("[GET /api/distribution/v1/pool/{id}][%d] distrConfigServiceGetPoolNotFound  %+v", 404, o.Payload)
}

func (o *DistrConfigServiceGetPoolNotFound) GetPayload() string {
	return o.Payload
}

func (o *DistrConfigServiceGetPoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDistrConfigServiceGetPoolDefault creates a DistrConfigServiceGetPoolDefault with default headers values
func NewDistrConfigServiceGetPoolDefault(code int) *DistrConfigServiceGetPoolDefault {
	return &DistrConfigServiceGetPoolDefault{
		_statusCode: code,
	}
}

/*DistrConfigServiceGetPoolDefault handles this case with default header values.

An unexpected error response
*/
type DistrConfigServiceGetPoolDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the distr config service get pool default response
func (o *DistrConfigServiceGetPoolDefault) Code() int {
	return o._statusCode
}

func (o *DistrConfigServiceGetPoolDefault) Error() string {
	return fmt.Sprintf("[GET /api/distribution/v1/pool/{id}][%d] DistrConfigService_GetPool default  %+v", o._statusCode, o.Payload)
}

func (o *DistrConfigServiceGetPoolDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *DistrConfigServiceGetPoolDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
