// Code generated by go-swagger; DO NOT EDIT.

package pool_data_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PoolDataServiceStoreAttachmentReader is a Reader for the PoolDataServiceStoreAttachment structure.
type PoolDataServiceStoreAttachmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PoolDataServiceStoreAttachmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPoolDataServiceStoreAttachmentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPoolDataServiceStoreAttachmentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPoolDataServiceStoreAttachmentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPoolDataServiceStoreAttachmentOK creates a PoolDataServiceStoreAttachmentOK with default headers values
func NewPoolDataServiceStoreAttachmentOK() *PoolDataServiceStoreAttachmentOK {
	return &PoolDataServiceStoreAttachmentOK{}
}

/*PoolDataServiceStoreAttachmentOK handles this case with default header values.

A successful response.
*/
type PoolDataServiceStoreAttachmentOK struct {
	Payload string
}

func (o *PoolDataServiceStoreAttachmentOK) Error() string {
	return fmt.Sprintf("[PUT /api/data/_r/{poolId}/{id}/{attname}][%d] poolDataServiceStoreAttachmentOK  %+v", 200, o.Payload)
}

func (o *PoolDataServiceStoreAttachmentOK) GetPayload() string {
	return o.Payload
}

func (o *PoolDataServiceStoreAttachmentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPoolDataServiceStoreAttachmentBadRequest creates a PoolDataServiceStoreAttachmentBadRequest with default headers values
func NewPoolDataServiceStoreAttachmentBadRequest() *PoolDataServiceStoreAttachmentBadRequest {
	return &PoolDataServiceStoreAttachmentBadRequest{}
}

/*PoolDataServiceStoreAttachmentBadRequest handles this case with default header values.

Returned when input parameters are not provided
*/
type PoolDataServiceStoreAttachmentBadRequest struct {
	Payload string
}

func (o *PoolDataServiceStoreAttachmentBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/data/_r/{poolId}/{id}/{attname}][%d] poolDataServiceStoreAttachmentBadRequest  %+v", 400, o.Payload)
}

func (o *PoolDataServiceStoreAttachmentBadRequest) GetPayload() string {
	return o.Payload
}

func (o *PoolDataServiceStoreAttachmentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPoolDataServiceStoreAttachmentNotFound creates a PoolDataServiceStoreAttachmentNotFound with default headers values
func NewPoolDataServiceStoreAttachmentNotFound() *PoolDataServiceStoreAttachmentNotFound {
	return &PoolDataServiceStoreAttachmentNotFound{}
}

/*PoolDataServiceStoreAttachmentNotFound handles this case with default header values.

Returned when the document does not exist.
*/
type PoolDataServiceStoreAttachmentNotFound struct {
	Payload string
}

func (o *PoolDataServiceStoreAttachmentNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/data/_r/{poolId}/{id}/{attname}][%d] poolDataServiceStoreAttachmentNotFound  %+v", 404, o.Payload)
}

func (o *PoolDataServiceStoreAttachmentNotFound) GetPayload() string {
	return o.Payload
}

func (o *PoolDataServiceStoreAttachmentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
