// Code generated by go-swagger; DO NOT EDIT.

package pool_data_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPoolDataServiceListParams creates a new PoolDataServiceListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPoolDataServiceListParams() *PoolDataServiceListParams {
	return &PoolDataServiceListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPoolDataServiceListParamsWithTimeout creates a new PoolDataServiceListParams object
// with the ability to set a timeout on a request.
func NewPoolDataServiceListParamsWithTimeout(timeout time.Duration) *PoolDataServiceListParams {
	return &PoolDataServiceListParams{
		timeout: timeout,
	}
}

// NewPoolDataServiceListParamsWithContext creates a new PoolDataServiceListParams object
// with the ability to set a context for a request.
func NewPoolDataServiceListParamsWithContext(ctx context.Context) *PoolDataServiceListParams {
	return &PoolDataServiceListParams{
		Context: ctx,
	}
}

// NewPoolDataServiceListParamsWithHTTPClient creates a new PoolDataServiceListParams object
// with the ability to set a custom HTTPClient for a request.
func NewPoolDataServiceListParamsWithHTTPClient(client *http.Client) *PoolDataServiceListParams {
	return &PoolDataServiceListParams{
		HTTPClient: client,
	}
}

/* PoolDataServiceListParams contains all the parameters to send to the API endpoint
   for the pool data service list operation.

   Typically these are written to a http.Request.
*/
type PoolDataServiceListParams struct {

	/* Limit.

	   The max number of records to fetch.
	*/
	Limit float64

	/* PoolID.

	   Pool ID (e.g. orders)
	*/
	PoolID string

	/* Skip.

	   The records to skip from the beggining
	*/
	Skip float64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the pool data service list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PoolDataServiceListParams) WithDefaults() *PoolDataServiceListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the pool data service list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PoolDataServiceListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the pool data service list params
func (o *PoolDataServiceListParams) WithTimeout(timeout time.Duration) *PoolDataServiceListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the pool data service list params
func (o *PoolDataServiceListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the pool data service list params
func (o *PoolDataServiceListParams) WithContext(ctx context.Context) *PoolDataServiceListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the pool data service list params
func (o *PoolDataServiceListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the pool data service list params
func (o *PoolDataServiceListParams) WithHTTPClient(client *http.Client) *PoolDataServiceListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the pool data service list params
func (o *PoolDataServiceListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLimit adds the limit to the pool data service list params
func (o *PoolDataServiceListParams) WithLimit(limit float64) *PoolDataServiceListParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the pool data service list params
func (o *PoolDataServiceListParams) SetLimit(limit float64) {
	o.Limit = limit
}

// WithPoolID adds the poolID to the pool data service list params
func (o *PoolDataServiceListParams) WithPoolID(poolID string) *PoolDataServiceListParams {
	o.SetPoolID(poolID)
	return o
}

// SetPoolID adds the poolId to the pool data service list params
func (o *PoolDataServiceListParams) SetPoolID(poolID string) {
	o.PoolID = poolID
}

// WithSkip adds the skip to the pool data service list params
func (o *PoolDataServiceListParams) WithSkip(skip float64) *PoolDataServiceListParams {
	o.SetSkip(skip)
	return o
}

// SetSkip adds the skip to the pool data service list params
func (o *PoolDataServiceListParams) SetSkip(skip float64) {
	o.Skip = skip
}

// WriteToRequest writes these params to a swagger request
func (o *PoolDataServiceListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param limit
	qrLimit := o.Limit
	qLimit := swag.FormatFloat64(qrLimit)
	if qLimit != "" {

		if err := r.SetQueryParam("limit", qLimit); err != nil {
			return err
		}
	}

	// path param poolId
	if err := r.SetPathParam("poolId", o.PoolID); err != nil {
		return err
	}

	// query param skip
	qrSkip := o.Skip
	qSkip := swag.FormatFloat64(qrSkip)
	if qSkip != "" {

		if err := r.SetQueryParam("skip", qSkip); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
