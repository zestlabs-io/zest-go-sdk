// Code generated by go-swagger; DO NOT EDIT.

package functions_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zestlabs-io/zest-go-sdk/api/models"
)

// FunctionsServiceCallAsyncFunctionReader is a Reader for the FunctionsServiceCallAsyncFunction structure.
type FunctionsServiceCallAsyncFunctionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FunctionsServiceCallAsyncFunctionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFunctionsServiceCallAsyncFunctionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewFunctionsServiceCallAsyncFunctionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewFunctionsServiceCallAsyncFunctionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFunctionsServiceCallAsyncFunctionOK creates a FunctionsServiceCallAsyncFunctionOK with default headers values
func NewFunctionsServiceCallAsyncFunctionOK() *FunctionsServiceCallAsyncFunctionOK {
	return &FunctionsServiceCallAsyncFunctionOK{}
}

/* FunctionsServiceCallAsyncFunctionOK describes a response with status code 200, with default header values.

A successful response.
*/
type FunctionsServiceCallAsyncFunctionOK struct {
	Payload models.FunctionsCallAsyncFunctionResponse
}

func (o *FunctionsServiceCallAsyncFunctionOK) Error() string {
	return fmt.Sprintf("[POST /api/func/v1/post-call/{reason}/{call.id}][%d] functionsServiceCallAsyncFunctionOK  %+v", 200, o.Payload)
}
func (o *FunctionsServiceCallAsyncFunctionOK) GetPayload() models.FunctionsCallAsyncFunctionResponse {
	return o.Payload
}

func (o *FunctionsServiceCallAsyncFunctionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFunctionsServiceCallAsyncFunctionNotFound creates a FunctionsServiceCallAsyncFunctionNotFound with default headers values
func NewFunctionsServiceCallAsyncFunctionNotFound() *FunctionsServiceCallAsyncFunctionNotFound {
	return &FunctionsServiceCallAsyncFunctionNotFound{}
}

/* FunctionsServiceCallAsyncFunctionNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type FunctionsServiceCallAsyncFunctionNotFound struct {
	Payload string
}

func (o *FunctionsServiceCallAsyncFunctionNotFound) Error() string {
	return fmt.Sprintf("[POST /api/func/v1/post-call/{reason}/{call.id}][%d] functionsServiceCallAsyncFunctionNotFound  %+v", 404, o.Payload)
}
func (o *FunctionsServiceCallAsyncFunctionNotFound) GetPayload() string {
	return o.Payload
}

func (o *FunctionsServiceCallAsyncFunctionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFunctionsServiceCallAsyncFunctionDefault creates a FunctionsServiceCallAsyncFunctionDefault with default headers values
func NewFunctionsServiceCallAsyncFunctionDefault(code int) *FunctionsServiceCallAsyncFunctionDefault {
	return &FunctionsServiceCallAsyncFunctionDefault{
		_statusCode: code,
	}
}

/* FunctionsServiceCallAsyncFunctionDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type FunctionsServiceCallAsyncFunctionDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the functions service call async function default response
func (o *FunctionsServiceCallAsyncFunctionDefault) Code() int {
	return o._statusCode
}

func (o *FunctionsServiceCallAsyncFunctionDefault) Error() string {
	return fmt.Sprintf("[POST /api/func/v1/post-call/{reason}/{call.id}][%d] FunctionsService_CallAsyncFunction default  %+v", o._statusCode, o.Payload)
}
func (o *FunctionsServiceCallAsyncFunctionDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *FunctionsServiceCallAsyncFunctionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
