// Code generated by go-swagger; DO NOT EDIT.

package auth_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zestlabs-io/zest-go-sdk/api/models"
)

// AuthServiceUpdateClientReader is a Reader for the AuthServiceUpdateClient structure.
type AuthServiceUpdateClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthServiceUpdateClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthServiceUpdateClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAuthServiceUpdateClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAuthServiceUpdateClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAuthServiceUpdateClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAuthServiceUpdateClientInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAuthServiceUpdateClientDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAuthServiceUpdateClientOK creates a AuthServiceUpdateClientOK with default headers values
func NewAuthServiceUpdateClientOK() *AuthServiceUpdateClientOK {
	return &AuthServiceUpdateClientOK{}
}

/* AuthServiceUpdateClientOK describes a response with status code 200, with default header values.

A successful response.
*/
type AuthServiceUpdateClientOK struct {
	Payload *models.V1UpdateClientResponse
}

func (o *AuthServiceUpdateClientOK) Error() string {
	return fmt.Sprintf("[PUT /api/auth/v1/client/{id}][%d] authServiceUpdateClientOK  %+v", 200, o.Payload)
}
func (o *AuthServiceUpdateClientOK) GetPayload() *models.V1UpdateClientResponse {
	return o.Payload
}

func (o *AuthServiceUpdateClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1UpdateClientResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceUpdateClientBadRequest creates a AuthServiceUpdateClientBadRequest with default headers values
func NewAuthServiceUpdateClientBadRequest() *AuthServiceUpdateClientBadRequest {
	return &AuthServiceUpdateClientBadRequest{}
}

/* AuthServiceUpdateClientBadRequest describes a response with status code 400, with default header values.

Returned when no valid client ID is provided in the request.
*/
type AuthServiceUpdateClientBadRequest struct {
	Payload interface{}
}

func (o *AuthServiceUpdateClientBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/auth/v1/client/{id}][%d] authServiceUpdateClientBadRequest  %+v", 400, o.Payload)
}
func (o *AuthServiceUpdateClientBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *AuthServiceUpdateClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceUpdateClientForbidden creates a AuthServiceUpdateClientForbidden with default headers values
func NewAuthServiceUpdateClientForbidden() *AuthServiceUpdateClientForbidden {
	return &AuthServiceUpdateClientForbidden{}
}

/* AuthServiceUpdateClientForbidden describes a response with status code 403, with default header values.

Returned when the caller is not allowed to perform this call.
*/
type AuthServiceUpdateClientForbidden struct {
	Payload interface{}
}

func (o *AuthServiceUpdateClientForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/auth/v1/client/{id}][%d] authServiceUpdateClientForbidden  %+v", 403, o.Payload)
}
func (o *AuthServiceUpdateClientForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *AuthServiceUpdateClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceUpdateClientNotFound creates a AuthServiceUpdateClientNotFound with default headers values
func NewAuthServiceUpdateClientNotFound() *AuthServiceUpdateClientNotFound {
	return &AuthServiceUpdateClientNotFound{}
}

/* AuthServiceUpdateClientNotFound describes a response with status code 404, with default header values.

Returned when a client ID could not be found within the scope of the account.
*/
type AuthServiceUpdateClientNotFound struct {
	Payload interface{}
}

func (o *AuthServiceUpdateClientNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/auth/v1/client/{id}][%d] authServiceUpdateClientNotFound  %+v", 404, o.Payload)
}
func (o *AuthServiceUpdateClientNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *AuthServiceUpdateClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceUpdateClientInternalServerError creates a AuthServiceUpdateClientInternalServerError with default headers values
func NewAuthServiceUpdateClientInternalServerError() *AuthServiceUpdateClientInternalServerError {
	return &AuthServiceUpdateClientInternalServerError{}
}

/* AuthServiceUpdateClientInternalServerError describes a response with status code 500, with default header values.

Returned whenever an internall error occurs.
*/
type AuthServiceUpdateClientInternalServerError struct {
	Payload interface{}
}

func (o *AuthServiceUpdateClientInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/auth/v1/client/{id}][%d] authServiceUpdateClientInternalServerError  %+v", 500, o.Payload)
}
func (o *AuthServiceUpdateClientInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *AuthServiceUpdateClientInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceUpdateClientDefault creates a AuthServiceUpdateClientDefault with default headers values
func NewAuthServiceUpdateClientDefault(code int) *AuthServiceUpdateClientDefault {
	return &AuthServiceUpdateClientDefault{
		_statusCode: code,
	}
}

/* AuthServiceUpdateClientDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type AuthServiceUpdateClientDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the auth service update client default response
func (o *AuthServiceUpdateClientDefault) Code() int {
	return o._statusCode
}

func (o *AuthServiceUpdateClientDefault) Error() string {
	return fmt.Sprintf("[PUT /api/auth/v1/client/{id}][%d] AuthService_UpdateClient default  %+v", o._statusCode, o.Payload)
}
func (o *AuthServiceUpdateClientDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *AuthServiceUpdateClientDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
