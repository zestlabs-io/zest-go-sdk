// Code generated by go-swagger; DO NOT EDIT.

package auth_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zestlabs-io/zest-go-sdk/api/models"
)

// AuthServiceDeleteClientReader is a Reader for the AuthServiceDeleteClient structure.
type AuthServiceDeleteClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthServiceDeleteClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthServiceDeleteClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAuthServiceDeleteClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAuthServiceDeleteClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAuthServiceDeleteClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAuthServiceDeleteClientInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAuthServiceDeleteClientDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAuthServiceDeleteClientOK creates a AuthServiceDeleteClientOK with default headers values
func NewAuthServiceDeleteClientOK() *AuthServiceDeleteClientOK {
	return &AuthServiceDeleteClientOK{}
}

/* AuthServiceDeleteClientOK describes a response with status code 200, with default header values.

Returned when Client is successfuly deleted.
*/
type AuthServiceDeleteClientOK struct {
	Payload models.V1DeleteClientResponse
}

func (o *AuthServiceDeleteClientOK) Error() string {
	return fmt.Sprintf("[DELETE /api/auth/v1/client/{id}][%d] authServiceDeleteClientOK  %+v", 200, o.Payload)
}
func (o *AuthServiceDeleteClientOK) GetPayload() models.V1DeleteClientResponse {
	return o.Payload
}

func (o *AuthServiceDeleteClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceDeleteClientBadRequest creates a AuthServiceDeleteClientBadRequest with default headers values
func NewAuthServiceDeleteClientBadRequest() *AuthServiceDeleteClientBadRequest {
	return &AuthServiceDeleteClientBadRequest{}
}

/* AuthServiceDeleteClientBadRequest describes a response with status code 400, with default header values.

Returned when no valid client ID is provided in the request.
*/
type AuthServiceDeleteClientBadRequest struct {
	Payload interface{}
}

func (o *AuthServiceDeleteClientBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/auth/v1/client/{id}][%d] authServiceDeleteClientBadRequest  %+v", 400, o.Payload)
}
func (o *AuthServiceDeleteClientBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *AuthServiceDeleteClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceDeleteClientForbidden creates a AuthServiceDeleteClientForbidden with default headers values
func NewAuthServiceDeleteClientForbidden() *AuthServiceDeleteClientForbidden {
	return &AuthServiceDeleteClientForbidden{}
}

/* AuthServiceDeleteClientForbidden describes a response with status code 403, with default header values.

Returned when the caller is not allowed to perform this call.
*/
type AuthServiceDeleteClientForbidden struct {
	Payload interface{}
}

func (o *AuthServiceDeleteClientForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/auth/v1/client/{id}][%d] authServiceDeleteClientForbidden  %+v", 403, o.Payload)
}
func (o *AuthServiceDeleteClientForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *AuthServiceDeleteClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceDeleteClientNotFound creates a AuthServiceDeleteClientNotFound with default headers values
func NewAuthServiceDeleteClientNotFound() *AuthServiceDeleteClientNotFound {
	return &AuthServiceDeleteClientNotFound{}
}

/* AuthServiceDeleteClientNotFound describes a response with status code 404, with default header values.

Returned when a user with the provided ID could not be found within the scope of the account.
*/
type AuthServiceDeleteClientNotFound struct {
	Payload interface{}
}

func (o *AuthServiceDeleteClientNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/auth/v1/client/{id}][%d] authServiceDeleteClientNotFound  %+v", 404, o.Payload)
}
func (o *AuthServiceDeleteClientNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *AuthServiceDeleteClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceDeleteClientInternalServerError creates a AuthServiceDeleteClientInternalServerError with default headers values
func NewAuthServiceDeleteClientInternalServerError() *AuthServiceDeleteClientInternalServerError {
	return &AuthServiceDeleteClientInternalServerError{}
}

/* AuthServiceDeleteClientInternalServerError describes a response with status code 500, with default header values.

Returned whenever an internall error occurs.
*/
type AuthServiceDeleteClientInternalServerError struct {
	Payload interface{}
}

func (o *AuthServiceDeleteClientInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/auth/v1/client/{id}][%d] authServiceDeleteClientInternalServerError  %+v", 500, o.Payload)
}
func (o *AuthServiceDeleteClientInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *AuthServiceDeleteClientInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceDeleteClientDefault creates a AuthServiceDeleteClientDefault with default headers values
func NewAuthServiceDeleteClientDefault(code int) *AuthServiceDeleteClientDefault {
	return &AuthServiceDeleteClientDefault{
		_statusCode: code,
	}
}

/* AuthServiceDeleteClientDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type AuthServiceDeleteClientDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the auth service delete client default response
func (o *AuthServiceDeleteClientDefault) Code() int {
	return o._statusCode
}

func (o *AuthServiceDeleteClientDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/auth/v1/client/{id}][%d] AuthService_DeleteClient default  %+v", o._statusCode, o.Payload)
}
func (o *AuthServiceDeleteClientDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *AuthServiceDeleteClientDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
