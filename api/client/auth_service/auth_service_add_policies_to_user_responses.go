// Code generated by go-swagger; DO NOT EDIT.

package auth_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zestlabs-io/zest-go-sdk/api/models"
)

// AuthServiceAddPoliciesToUserReader is a Reader for the AuthServiceAddPoliciesToUser structure.
type AuthServiceAddPoliciesToUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthServiceAddPoliciesToUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthServiceAddPoliciesToUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewAuthServiceAddPoliciesToUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAuthServiceAddPoliciesToUserDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAuthServiceAddPoliciesToUserOK creates a AuthServiceAddPoliciesToUserOK with default headers values
func NewAuthServiceAddPoliciesToUserOK() *AuthServiceAddPoliciesToUserOK {
	return &AuthServiceAddPoliciesToUserOK{}
}

/*AuthServiceAddPoliciesToUserOK handles this case with default header values.

A successful response.
*/
type AuthServiceAddPoliciesToUserOK struct {
	Payload *models.V1AddPoliciesToUserResponse
}

func (o *AuthServiceAddPoliciesToUserOK) Error() string {
	return fmt.Sprintf("[POST /api/auth/v1/user/policies/add][%d] authServiceAddPoliciesToUserOK  %+v", 200, o.Payload)
}

func (o *AuthServiceAddPoliciesToUserOK) GetPayload() *models.V1AddPoliciesToUserResponse {
	return o.Payload
}

func (o *AuthServiceAddPoliciesToUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1AddPoliciesToUserResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceAddPoliciesToUserNotFound creates a AuthServiceAddPoliciesToUserNotFound with default headers values
func NewAuthServiceAddPoliciesToUserNotFound() *AuthServiceAddPoliciesToUserNotFound {
	return &AuthServiceAddPoliciesToUserNotFound{}
}

/*AuthServiceAddPoliciesToUserNotFound handles this case with default header values.

Returned when the resource does not exist.
*/
type AuthServiceAddPoliciesToUserNotFound struct {
	Payload string
}

func (o *AuthServiceAddPoliciesToUserNotFound) Error() string {
	return fmt.Sprintf("[POST /api/auth/v1/user/policies/add][%d] authServiceAddPoliciesToUserNotFound  %+v", 404, o.Payload)
}

func (o *AuthServiceAddPoliciesToUserNotFound) GetPayload() string {
	return o.Payload
}

func (o *AuthServiceAddPoliciesToUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceAddPoliciesToUserDefault creates a AuthServiceAddPoliciesToUserDefault with default headers values
func NewAuthServiceAddPoliciesToUserDefault(code int) *AuthServiceAddPoliciesToUserDefault {
	return &AuthServiceAddPoliciesToUserDefault{
		_statusCode: code,
	}
}

/*AuthServiceAddPoliciesToUserDefault handles this case with default header values.

An unexpected error response
*/
type AuthServiceAddPoliciesToUserDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the auth service add policies to user default response
func (o *AuthServiceAddPoliciesToUserDefault) Code() int {
	return o._statusCode
}

func (o *AuthServiceAddPoliciesToUserDefault) Error() string {
	return fmt.Sprintf("[POST /api/auth/v1/user/policies/add][%d] AuthService_AddPoliciesToUser default  %+v", o._statusCode, o.Payload)
}

func (o *AuthServiceAddPoliciesToUserDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *AuthServiceAddPoliciesToUserDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
