// Code generated by go-swagger; DO NOT EDIT.

package auth_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zestlabs-io/zest-go-sdk/api/models"
)

// AuthServiceGetClientReader is a Reader for the AuthServiceGetClient structure.
type AuthServiceGetClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthServiceGetClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthServiceGetClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewAuthServiceGetClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAuthServiceGetClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAuthServiceGetClientInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAuthServiceGetClientDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAuthServiceGetClientOK creates a AuthServiceGetClientOK with default headers values
func NewAuthServiceGetClientOK() *AuthServiceGetClientOK {
	return &AuthServiceGetClientOK{}
}

/*AuthServiceGetClientOK handles this case with default header values.

Returned when client is successfuly fetched.
*/
type AuthServiceGetClientOK struct {
	Payload *models.V1GetClientResponse
}

func (o *AuthServiceGetClientOK) Error() string {
	return fmt.Sprintf("[GET /api/auth/v1/client/{clientID}][%d] authServiceGetClientOK  %+v", 200, o.Payload)
}

func (o *AuthServiceGetClientOK) GetPayload() *models.V1GetClientResponse {
	return o.Payload
}

func (o *AuthServiceGetClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1GetClientResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceGetClientForbidden creates a AuthServiceGetClientForbidden with default headers values
func NewAuthServiceGetClientForbidden() *AuthServiceGetClientForbidden {
	return &AuthServiceGetClientForbidden{}
}

/*AuthServiceGetClientForbidden handles this case with default header values.

Returned when the caller is not allowed to perform this call.
*/
type AuthServiceGetClientForbidden struct {
	Payload interface{}
}

func (o *AuthServiceGetClientForbidden) Error() string {
	return fmt.Sprintf("[GET /api/auth/v1/client/{clientID}][%d] authServiceGetClientForbidden  %+v", 403, o.Payload)
}

func (o *AuthServiceGetClientForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *AuthServiceGetClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceGetClientNotFound creates a AuthServiceGetClientNotFound with default headers values
func NewAuthServiceGetClientNotFound() *AuthServiceGetClientNotFound {
	return &AuthServiceGetClientNotFound{}
}

/*AuthServiceGetClientNotFound handles this case with default header values.

Returned when a client with the given ID is not found.
*/
type AuthServiceGetClientNotFound struct {
	Payload interface{}
}

func (o *AuthServiceGetClientNotFound) Error() string {
	return fmt.Sprintf("[GET /api/auth/v1/client/{clientID}][%d] authServiceGetClientNotFound  %+v", 404, o.Payload)
}

func (o *AuthServiceGetClientNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *AuthServiceGetClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceGetClientInternalServerError creates a AuthServiceGetClientInternalServerError with default headers values
func NewAuthServiceGetClientInternalServerError() *AuthServiceGetClientInternalServerError {
	return &AuthServiceGetClientInternalServerError{}
}

/*AuthServiceGetClientInternalServerError handles this case with default header values.

Returned whenever an internall error occurs.
*/
type AuthServiceGetClientInternalServerError struct {
	Payload interface{}
}

func (o *AuthServiceGetClientInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/auth/v1/client/{clientID}][%d] authServiceGetClientInternalServerError  %+v", 500, o.Payload)
}

func (o *AuthServiceGetClientInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *AuthServiceGetClientInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceGetClientDefault creates a AuthServiceGetClientDefault with default headers values
func NewAuthServiceGetClientDefault(code int) *AuthServiceGetClientDefault {
	return &AuthServiceGetClientDefault{
		_statusCode: code,
	}
}

/*AuthServiceGetClientDefault handles this case with default header values.

An unexpected error response
*/
type AuthServiceGetClientDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the auth service get client default response
func (o *AuthServiceGetClientDefault) Code() int {
	return o._statusCode
}

func (o *AuthServiceGetClientDefault) Error() string {
	return fmt.Sprintf("[GET /api/auth/v1/client/{clientID}][%d] AuthService_GetClient default  %+v", o._statusCode, o.Payload)
}

func (o *AuthServiceGetClientDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *AuthServiceGetClientDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
