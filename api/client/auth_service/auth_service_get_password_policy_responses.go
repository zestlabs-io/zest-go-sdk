// Code generated by go-swagger; DO NOT EDIT.

package auth_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zestlabs-io/zest-go-sdk/api/models"
)

// AuthServiceGetPasswordPolicyReader is a Reader for the AuthServiceGetPasswordPolicy structure.
type AuthServiceGetPasswordPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthServiceGetPasswordPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthServiceGetPasswordPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewAuthServiceGetPasswordPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAuthServiceGetPasswordPolicyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAuthServiceGetPasswordPolicyOK creates a AuthServiceGetPasswordPolicyOK with default headers values
func NewAuthServiceGetPasswordPolicyOK() *AuthServiceGetPasswordPolicyOK {
	return &AuthServiceGetPasswordPolicyOK{}
}

/* AuthServiceGetPasswordPolicyOK describes a response with status code 200, with default header values.

A successful response.
*/
type AuthServiceGetPasswordPolicyOK struct {
	Payload *models.V1GetPasswordPolicyResponse
}

func (o *AuthServiceGetPasswordPolicyOK) Error() string {
	return fmt.Sprintf("[GET /api/auth/v1/password-policy][%d] authServiceGetPasswordPolicyOK  %+v", 200, o.Payload)
}
func (o *AuthServiceGetPasswordPolicyOK) GetPayload() *models.V1GetPasswordPolicyResponse {
	return o.Payload
}

func (o *AuthServiceGetPasswordPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1GetPasswordPolicyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceGetPasswordPolicyNotFound creates a AuthServiceGetPasswordPolicyNotFound with default headers values
func NewAuthServiceGetPasswordPolicyNotFound() *AuthServiceGetPasswordPolicyNotFound {
	return &AuthServiceGetPasswordPolicyNotFound{}
}

/* AuthServiceGetPasswordPolicyNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type AuthServiceGetPasswordPolicyNotFound struct {
	Payload string
}

func (o *AuthServiceGetPasswordPolicyNotFound) Error() string {
	return fmt.Sprintf("[GET /api/auth/v1/password-policy][%d] authServiceGetPasswordPolicyNotFound  %+v", 404, o.Payload)
}
func (o *AuthServiceGetPasswordPolicyNotFound) GetPayload() string {
	return o.Payload
}

func (o *AuthServiceGetPasswordPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceGetPasswordPolicyDefault creates a AuthServiceGetPasswordPolicyDefault with default headers values
func NewAuthServiceGetPasswordPolicyDefault(code int) *AuthServiceGetPasswordPolicyDefault {
	return &AuthServiceGetPasswordPolicyDefault{
		_statusCode: code,
	}
}

/* AuthServiceGetPasswordPolicyDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type AuthServiceGetPasswordPolicyDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the auth service get password policy default response
func (o *AuthServiceGetPasswordPolicyDefault) Code() int {
	return o._statusCode
}

func (o *AuthServiceGetPasswordPolicyDefault) Error() string {
	return fmt.Sprintf("[GET /api/auth/v1/password-policy][%d] AuthService_GetPasswordPolicy default  %+v", o._statusCode, o.Payload)
}
func (o *AuthServiceGetPasswordPolicyDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *AuthServiceGetPasswordPolicyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
