// Code generated by go-swagger; DO NOT EDIT.

package auth_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zestlabs-io/zest-go-sdk/api/models"
)

// AuthServiceGetUserInfoReader is a Reader for the AuthServiceGetUserInfo structure.
type AuthServiceGetUserInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthServiceGetUserInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthServiceGetUserInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewAuthServiceGetUserInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAuthServiceGetUserInfoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAuthServiceGetUserInfoOK creates a AuthServiceGetUserInfoOK with default headers values
func NewAuthServiceGetUserInfoOK() *AuthServiceGetUserInfoOK {
	return &AuthServiceGetUserInfoOK{}
}

/* AuthServiceGetUserInfoOK describes a response with status code 200, with default header values.

A successful response.
*/
type AuthServiceGetUserInfoOK struct {
	Payload *models.V1GetUserInfoResponse
}

func (o *AuthServiceGetUserInfoOK) Error() string {
	return fmt.Sprintf("[GET /api/auth/v1/userinfo][%d] authServiceGetUserInfoOK  %+v", 200, o.Payload)
}
func (o *AuthServiceGetUserInfoOK) GetPayload() *models.V1GetUserInfoResponse {
	return o.Payload
}

func (o *AuthServiceGetUserInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1GetUserInfoResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceGetUserInfoNotFound creates a AuthServiceGetUserInfoNotFound with default headers values
func NewAuthServiceGetUserInfoNotFound() *AuthServiceGetUserInfoNotFound {
	return &AuthServiceGetUserInfoNotFound{}
}

/* AuthServiceGetUserInfoNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type AuthServiceGetUserInfoNotFound struct {
	Payload string
}

func (o *AuthServiceGetUserInfoNotFound) Error() string {
	return fmt.Sprintf("[GET /api/auth/v1/userinfo][%d] authServiceGetUserInfoNotFound  %+v", 404, o.Payload)
}
func (o *AuthServiceGetUserInfoNotFound) GetPayload() string {
	return o.Payload
}

func (o *AuthServiceGetUserInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceGetUserInfoDefault creates a AuthServiceGetUserInfoDefault with default headers values
func NewAuthServiceGetUserInfoDefault(code int) *AuthServiceGetUserInfoDefault {
	return &AuthServiceGetUserInfoDefault{
		_statusCode: code,
	}
}

/* AuthServiceGetUserInfoDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type AuthServiceGetUserInfoDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the auth service get user info default response
func (o *AuthServiceGetUserInfoDefault) Code() int {
	return o._statusCode
}

func (o *AuthServiceGetUserInfoDefault) Error() string {
	return fmt.Sprintf("[GET /api/auth/v1/userinfo][%d] AuthService_GetUserInfo default  %+v", o._statusCode, o.Payload)
}
func (o *AuthServiceGetUserInfoDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *AuthServiceGetUserInfoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
