// Code generated by go-swagger; DO NOT EDIT.

package auth_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/zestlabs-io/zest-go-sdk/api/models"
)

// AuthServiceGetUserIDByEmailReader is a Reader for the AuthServiceGetUserIDByEmail structure.
type AuthServiceGetUserIDByEmailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthServiceGetUserIDByEmailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthServiceGetUserIDByEmailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewAuthServiceGetUserIDByEmailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAuthServiceGetUserIDByEmailDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAuthServiceGetUserIDByEmailOK creates a AuthServiceGetUserIDByEmailOK with default headers values
func NewAuthServiceGetUserIDByEmailOK() *AuthServiceGetUserIDByEmailOK {
	return &AuthServiceGetUserIDByEmailOK{}
}

/* AuthServiceGetUserIDByEmailOK describes a response with status code 200, with default header values.

A successful response.
*/
type AuthServiceGetUserIDByEmailOK struct {
	Payload *models.V1GetUserIDByEmailResponse
}

func (o *AuthServiceGetUserIDByEmailOK) Error() string {
	return fmt.Sprintf("[GET /api/auth/v1/user-id-by-email/{email}][%d] authServiceGetUserIdByEmailOK  %+v", 200, o.Payload)
}
func (o *AuthServiceGetUserIDByEmailOK) GetPayload() *models.V1GetUserIDByEmailResponse {
	return o.Payload
}

func (o *AuthServiceGetUserIDByEmailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1GetUserIDByEmailResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceGetUserIDByEmailNotFound creates a AuthServiceGetUserIDByEmailNotFound with default headers values
func NewAuthServiceGetUserIDByEmailNotFound() *AuthServiceGetUserIDByEmailNotFound {
	return &AuthServiceGetUserIDByEmailNotFound{}
}

/* AuthServiceGetUserIDByEmailNotFound describes a response with status code 404, with default header values.

Returned when the resource does not exist.
*/
type AuthServiceGetUserIDByEmailNotFound struct {
	Payload string
}

func (o *AuthServiceGetUserIDByEmailNotFound) Error() string {
	return fmt.Sprintf("[GET /api/auth/v1/user-id-by-email/{email}][%d] authServiceGetUserIdByEmailNotFound  %+v", 404, o.Payload)
}
func (o *AuthServiceGetUserIDByEmailNotFound) GetPayload() string {
	return o.Payload
}

func (o *AuthServiceGetUserIDByEmailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthServiceGetUserIDByEmailDefault creates a AuthServiceGetUserIDByEmailDefault with default headers values
func NewAuthServiceGetUserIDByEmailDefault(code int) *AuthServiceGetUserIDByEmailDefault {
	return &AuthServiceGetUserIDByEmailDefault{
		_statusCode: code,
	}
}

/* AuthServiceGetUserIDByEmailDefault describes a response with status code -1, with default header values.

An unexpected error response
*/
type AuthServiceGetUserIDByEmailDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the auth service get user ID by email default response
func (o *AuthServiceGetUserIDByEmailDefault) Code() int {
	return o._statusCode
}

func (o *AuthServiceGetUserIDByEmailDefault) Error() string {
	return fmt.Sprintf("[GET /api/auth/v1/user-id-by-email/{email}][%d] AuthService_GetUserIDByEmail default  %+v", o._statusCode, o.Payload)
}
func (o *AuthServiceGetUserIDByEmailDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *AuthServiceGetUserIDByEmailDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
