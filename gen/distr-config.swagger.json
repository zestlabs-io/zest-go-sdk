{
  "swagger": "2.0",
  "info": {
    "title": "Distribution Configuration",
    "version": "1.0",
    "contact": {
      "name": "Distribution configuration",
      "url": "https://gitlab.com/zestlabs-io/data-distribution/-/tree/master/distr-config",
      "email": "contact@zestlabs.io"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/distribution/v1/activate-pool": {
      "post": {
        "summary": "ActivatePool data pool task",
        "operationId": "DistrConfigService_ActivatePool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigActivatePoolResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigActivatePoolRequest"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/app": {
      "post": {
        "summary": "Create mobile application",
        "operationId": "DistrConfigService_CreateApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigCreateAppResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigMobileApp"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/app/{id}": {
      "delete": {
        "summary": "Delete mobile application",
        "operationId": "DistrConfigService_DeleteApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigDeleteAppResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/apps": {
      "get": {
        "summary": "Get all mobile applications",
        "operationId": "DistrConfigService_GetApps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigGetAppsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/assign-app-pools": {
      "post": {
        "summary": "Assign data pools to mobile application",
        "operationId": "DistrConfigService_AssignAppPools",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigAssignAppPoolsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigAssignAppPoolsRequest"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/assign-app-users": {
      "post": {
        "summary": "Assign mobile application to users",
        "operationId": "DistrConfigService_AssignAppUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigAssignAppUsersResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigAssignAppUsersRequest"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/assign-tag-to-user": {
      "post": {
        "summary": "Assign filtering tag to user",
        "operationId": "DistrConfigService_AssignTagToUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigAssignTagToUserResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigAssignTagToUserRequest"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/get-pool-distribution/{id}": {
      "get": {
        "summary": "ActivatePool data pool task",
        "operationId": "DistrConfigService_GetPoolDistribution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigGetPoolDistributionResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/pool": {
      "post": {
        "summary": "CreatePool new data pool task",
        "operationId": "DistrConfigService_CreatePool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigCreatePoolResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigDataPool"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      },
      "put": {
        "summary": "UpdatePool data pool task",
        "operationId": "DistrConfigService_UpdatePool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigUpdatePoolResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigDataPool"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/pool/{dataPool.id}": {
      "patch": {
        "summary": "UpdatePool data pool task",
        "operationId": "DistrConfigService_UpdatePool2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigUpdatePoolResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "dataPool.id",
            "description": "Primary key together with accountId - should be unique by client - used also as name of the pool",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigDataPool"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/pool/{id}": {
      "get": {
        "summary": "Get data pool task",
        "operationId": "DistrConfigService_GetPool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigGetPoolResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      },
      "delete": {
        "summary": "DeletePool data pool task",
        "operationId": "DistrConfigService_DeletePool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigDeletePoolResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/pools": {
      "get": {
        "summary": "Get all data pool tasks",
        "operationId": "DistrConfigService_GetPools",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigGetPoolsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DistrConfigService"
        ]
      },
      "post": {
        "summary": "CreatePool new data pool task",
        "operationId": "DistrConfigService_CreatePools",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigCreatePoolsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigCreatePoolsRequest"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/set-app-bundle": {
      "post": {
        "summary": "Set the mobile application bundle",
        "operationId": "DistrConfigService_SetAppBundle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigSetAppBundleResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigSetAppBundleRequest"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/unassign-app-pools": {
      "post": {
        "summary": "Unassign data pool from mobile application",
        "operationId": "DistrConfigService_UnassignAppPools",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigUnassignAppPoolsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigUnassignAppPoolsRequest"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/unassign-app-users": {
      "post": {
        "summary": "Unassign mobile application from users",
        "operationId": "DistrConfigService_UnassignAppUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigUnassignAppUsersResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigUnassignAppUsersRequest"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/unassign-tag-from-user": {
      "post": {
        "summary": "Unassign filtering tag from user",
        "operationId": "DistrConfigService_UnassignTagFromUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigUnassignTagFromUserResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigUnassignTagFromUserRequest"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/user": {
      "post": {
        "summary": "Registers user in distribution database",
        "operationId": "DistrConfigService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigCreateUserResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigCreateUserRequest"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/user/{id}": {
      "delete": {
        "summary": "Deletes user from distribution db",
        "operationId": "DistrConfigService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigDeleteUserResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/users": {
      "get": {
        "summary": "Fetch all users in account distribution db",
        "operationId": "DistrConfigService_GetUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigGetUsersResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "DistrConfigService"
        ]
      }
    },
    "/api/distribution/v1/validate-pool-data": {
      "post": {
        "summary": "Validate pool data against pool specification",
        "operationId": "DistrConfigService_ValidatePoolData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/distrconfigValidatePoolDataResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/distrconfigValidatePoolDataRequest"
            }
          }
        ],
        "tags": [
          "DistrConfigService"
        ]
      }
    }
  },
  "definitions": {
    "distrconfigActivatePoolRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "distrconfigActivatePoolResponse": {
      "type": "object"
    },
    "distrconfigAssignAppPoolsRequest": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "poolIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "distrconfigAssignAppPoolsResponse": {
      "type": "object"
    },
    "distrconfigAssignAppUsersRequest": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "userIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "distrconfigAssignAppUsersResponse": {
      "type": "object"
    },
    "distrconfigAssignTagToUserRequest": {
      "type": "object",
      "properties": {
        "poolId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "tagValue": {
          "type": "string"
        }
      }
    },
    "distrconfigAssignTagToUserResponse": {
      "type": "object"
    },
    "distrconfigCreateAppResponse": {
      "type": "object"
    },
    "distrconfigCreatePoolResponse": {
      "type": "object",
      "title": "Contains data of createPoold data pool task"
    },
    "distrconfigCreatePoolsRequest": {
      "type": "object",
      "properties": {
        "dataPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/distrconfigDataPool"
          }
        }
      }
    },
    "distrconfigCreatePoolsResponse": {
      "type": "object",
      "title": "Contains data of createPoold data pool task"
    },
    "distrconfigCreateUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "distrconfigCreateUserResponse": {
      "type": "object"
    },
    "distrconfigDataPool": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Primary key together with accountId - should be unique by client - used also as name of the pool"
        },
        "poolType": {
          "$ref": "#/definitions/distrconfigPoolType",
          "title": "The type of the pool - User, Filtered(with tags), Global (for the app)"
        },
        "pkExtractExpression": {
          "type": "string",
          "title": "http://goessner.net/articles/JsonPath/ expression to extract the primary key"
        },
        "tagExtractExpression": {
          "type": "string",
          "title": "http://goessner.net/articles/JsonPath/ expression to extract tags from the documents. For user type pools this is the user id"
        },
        "active": {
          "type": "boolean",
          "format": "boolean",
          "title": "When activated it locks the record and cannot be changed"
        },
        "schema": {
          "type": "string",
          "format": "byte",
          "title": "If set - should contain http://json-schema.org/ schema, that will validate every document"
        },
        "onUploadFunction": {
          "type": "string",
          "title": "Function to be called onUpload"
        }
      }
    },
    "distrconfigDeleteAppResponse": {
      "type": "object"
    },
    "distrconfigDeletePoolResponse": {
      "type": "object"
    },
    "distrconfigDeleteUserResponse": {
      "type": "object"
    },
    "distrconfigDistributionUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "activeAppId": {
          "type": "string"
        },
        "tagAssignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/distrconfigUserTagAssignment"
          }
        }
      }
    },
    "distrconfigGetAppsResponse": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/distrconfigMobileAppWithPools"
          }
        }
      }
    },
    "distrconfigGetPoolDistributionResponse": {
      "type": "object",
      "properties": {
        "dbUrl": {
          "type": "string"
        },
        "poolType": {
          "$ref": "#/definitions/distrconfigPoolType",
          "title": "The type of the pool - User, Filtered(with tags), Global (for the app)"
        },
        "tagPrefix": {
          "type": "string",
          "title": "Tag prefix used for determining if user assignments match the record"
        }
      }
    },
    "distrconfigGetPoolResponse": {
      "type": "object",
      "properties": {
        "dataPool": {
          "$ref": "#/definitions/distrconfigDataPool"
        }
      },
      "title": "Contains data pool task data specified in by ID request"
    },
    "distrconfigGetPoolsResponse": {
      "type": "object",
      "properties": {
        "dataPool": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/distrconfigDataPool"
          },
          "title": "List of all data pool tasks"
        },
        "poolSizes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/distrconfigPoolSize"
          }
        }
      },
      "title": "Contains list of all data pool tasks"
    },
    "distrconfigGetUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/distrconfigDistributionUser"
          }
        }
      }
    },
    "distrconfigMobileApp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Primary key - unique by account"
        },
        "bundleUrl": {
          "type": "string",
          "title": "Bundle URL for downloading the react bundle"
        },
        "active": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "distrconfigMobileAppWithPools": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "bundleUrl": {
          "type": "string"
        },
        "active": {
          "type": "boolean",
          "format": "boolean"
        },
        "assignedPools": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "distrconfigPoolSize": {
      "type": "object",
      "properties": {
        "poolId": {
          "type": "string"
        },
        "globalDataSizeBytes": {
          "type": "string",
          "format": "int64"
        },
        "userDataSizeBytes": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "distrconfigPoolType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "GLOBAL",
        "FILTERED",
        "USER"
      ],
      "default": "UNKNOWN"
    },
    "distrconfigSetAppBundleRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "bundleUrl": {
          "type": "string"
        }
      }
    },
    "distrconfigSetAppBundleResponse": {
      "type": "object"
    },
    "distrconfigUnassignAppPoolsRequest": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "poolIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "distrconfigUnassignAppPoolsResponse": {
      "type": "object"
    },
    "distrconfigUnassignAppUsersRequest": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "userIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "distrconfigUnassignAppUsersResponse": {
      "type": "object"
    },
    "distrconfigUnassignTagFromUserRequest": {
      "type": "object",
      "properties": {
        "poolId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "tagValue": {
          "type": "string"
        }
      }
    },
    "distrconfigUnassignTagFromUserResponse": {
      "type": "object"
    },
    "distrconfigUpdatePoolResponse": {
      "type": "object",
      "title": "Contains status of UpdatePool operation"
    },
    "distrconfigUserTagAssignment": {
      "type": "object",
      "properties": {
        "poolId": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "distrconfigValidatePoolDataRequest": {
      "type": "object",
      "properties": {
        "poolType": {
          "$ref": "#/definitions/distrconfigPoolType",
          "title": "The type of the pool - User, Filtered(with tags), Global (for the app)"
        },
        "pkExtractExpression": {
          "type": "string",
          "title": "http://goessner.net/articles/JsonPath/ expression to extract the primary key"
        },
        "tagExtractExpression": {
          "type": "string",
          "title": "http://goessner.net/articles/JsonPath/ expression to extract tags from the documents. For user type pools this is the user id"
        },
        "schema": {
          "type": "string",
          "format": "byte",
          "title": "If set - should contain http://json-schema.org/ schema, that will validate every document"
        },
        "data": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "distrconfigValidatePoolDataResponse": {
      "type": "object",
      "properties": {
        "derivedPk": {
          "type": "string"
        },
        "derivedTag": {
          "type": "string"
        },
        "validationErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
