openapi: 3.0.1
info:
  contact:
    email: contact@zestlabs.io
    name: Zest
    url: https://zestlabs.io
  title: Zest API
  version: "1.0"
servers:
- url: /
paths:
  /api/auth/v1/accesskey:
    post:
      operationId: AuthService_CreateAccessKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateAccessKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CreateAccessKeyResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: User Access Keys API
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/accesskey/{accessKeyID}:
    delete:
      operationId: AuthService_DeleteAccessKey
      parameters:
      - in: path
        name: accessKeyID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeleteAccessKeyResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
  /api/auth/v1/account:
    get:
      operationId: AuthService_GetOwnAccount
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAccountResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
  /api/auth/v1/account/{account.accountID}:
    put:
      operationId: AuthService_UpdateAccount
      parameters:
      - in: path
        name: account.accountID
        required: true
        schema:
          format: int64
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdateAccountResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/check-hmac:
    post:
      operationId: AuthService_CheckHMACAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CheckHMACAuthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CheckHMACAuthResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Auth API
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/check-token:
    post:
      operationId: AuthService_CheckTokenAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CheckTokenAuthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CheckTokenAuthResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/client:
    post:
      description: "Authorisation requirements:\n\t\tService:\t\t`auth`\n\t\tCall:\t\
        \t\t\t`CreateClient`\n\t\tScope:"
      operationId: AuthService_CreateClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateClientRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                client: The client that have been created
              schema:
                $ref: '#/components/schemas/v1CreateClientResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when no valid client ID is provided in the request,
            or the account has already has 20 clients.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the caller is not allowed to perform this call.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: Returned whenever an internall error occurs.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: |-
        CreateClient will try to create a new oidc client for the account with the
        accountID concatenated with suffix provided in the request. If the client already exists
        or there are already 20 clients, an error will be returned.
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/client/{id}:
    delete:
      description: "Authorisation requirements:\n\t\tService:\t\t`auth`\n\t\tCall:\t\
        \t\t\t`DeleteClient`\n\t\tScope:\t\t\tclient ID"
      operationId: AuthService_DeleteClient
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeleteClientResponse'
          description: Returned when Client is successfuly deleted.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when no valid client ID is provided in the request,
            or the account has already has 20 clients.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the caller is not allowed to perform this call.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a user with the provided ID could not be found
            within the scope of the account.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: Returned whenever an internall error occurs.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: |-
        DeleteClient will delete the client with the provided ID and return
        an error, if a key with this ID does not exist, or is not part of accounts clients
      tags:
      - AuthService
    put:
      description: "Authorisation requirements:\n\t\tService:\t\t`auth`\n\t\tCall:\t\
        \t\t\t`UpdateClient`\n\t\tScope:\t\t\t`id`"
      operationId: AuthService_UpdateClient
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateClientRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                client: The client that have been updated
              schema:
                $ref: '#/components/schemas/v1UpdateClientResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Returned when no valid client ID is provided in the request.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the caller is not allowed to perform this call.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Returned when a client ID could not be found within the scope
            of the account.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: Returned whenever an internall error occurs.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: UpdateClient updates the data for account client.
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/clients:
    get:
      description: "Authorisation requirements:\n\t\tService:\t\t`auth`\n\t\tCall:\t\
        \t\t\t`GetClients`\n\t\tScope:\t\t\t``"
      operationId: AuthService_GetClients
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetClientsResponse'
          description: Returned when clients are successfuly fetched.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Returned when the caller is not allowed to perform this call.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        "500":
          content:
            application/json:
              schema:
                type: object
          description: Returned whenever an internall error occurs.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: GetClients loads all clients for account.
      tags:
      - AuthService
  /api/auth/v1/default-policies:
    get:
      operationId: AuthService_GetDefaultPolicies
      parameters:
      - in: query
        name: offset
        schema:
          type: string
      - in: query
        name: limit
        schema:
          format: int64
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetDefaultPoliciesResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
  /api/auth/v1/password-policy:
    get:
      operationId: AuthService_GetPasswordPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetPasswordPolicyResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
  /api/auth/v1/policies:
    get:
      operationId: AuthService_GetPolicies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetPoliciesResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
  /api/auth/v1/policy:
    post:
      operationId: AuthService_CreatePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreatePolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CreatePolicyResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
    put:
      operationId: AuthService_UpdatePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdatePolicyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdatePolicyResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/policy/{policyID}:
    delete:
      operationId: AuthService_DeletePolicy
      parameters:
      - in: path
        name: policyID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeletePolicyResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
    get:
      operationId: AuthService_GetPolicy
      parameters:
      - in: path
        name: policyID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetPolicyResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: RBAC API
      tags:
      - AuthService
  /api/auth/v1/reset-password:
    post:
      operationId: AuthService_ResetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ResetPasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ResetPasswordResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/role:
    post:
      operationId: AuthService_CreateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CreateRoleResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
    put:
      operationId: AuthService_UpdateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdateRoleResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/role/policies/add:
    post:
      operationId: AuthService_AddPoliciesToRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1AddPoliciesToRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AddPoliciesToRoleResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/role/policies/remove:
    post:
      operationId: AuthService_RemovePoliciesFromRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1RemovePoliciesFromRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1RemovePoliciesFromRoleResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/role/users/add:
    post:
      operationId: AuthService_AddUsersToRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1AddUsersToRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AddUsersToRoleResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/role/users/remove:
    post:
      operationId: AuthService_RemoveUsersFromRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1RemoveUsersFromRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1RemoveUsersFromRoleResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/role/users/{roleID}:
    get:
      operationId: AuthService_GetUsersForRole
      parameters:
      - in: path
        name: roleID
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int64
          type: string
      - in: query
        name: limit
        schema:
          format: int64
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUsersForRoleResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
  /api/auth/v1/role/{roleID}:
    delete:
      operationId: AuthService_DeleteRole
      parameters:
      - in: path
        name: roleID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeleteRoleResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
    get:
      operationId: AuthService_GetRole
      parameters:
      - in: path
        name: roleID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetRoleResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
  /api/auth/v1/roles:
    get:
      operationId: AuthService_GetRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetRolesResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
  /api/auth/v1/set-password:
    post:
      operationId: AuthService_SetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1SetPasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SetPasswordResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Password API
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/user:
    post:
      operationId: AuthService_CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CreateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CreateUserResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/user-id-by-email/{email}:
    get:
      operationId: AuthService_GetUserIDByEmail
      parameters:
      - in: path
        name: email
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUserIDByEmailResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
  /api/auth/v1/user/accesskeys/{userID}:
    get:
      operationId: AuthService_GetUserAccessKeys
      parameters:
      - in: path
        name: userID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUserAccessKeysResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
  /api/auth/v1/user/policies/add:
    post:
      operationId: AuthService_AddPoliciesToUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1AddPoliciesToUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AddPoliciesToUserResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/user/policies/remove:
    post:
      operationId: AuthService_RemovePoliciesFromUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1RemovePoliciesFromUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1RemovePoliciesFromUserResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/user/{user.userID}:
    put:
      operationId: AuthService_UpdateUser
      parameters:
      - in: path
        name: user.userID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UpdateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1UpdateUserResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
      x-codegen-request-body-name: body
  /api/auth/v1/user/{userID}:
    delete:
      operationId: AuthService_DeleteUser
      parameters:
      - in: path
        name: userID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DeleteUserResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
    get:
      operationId: AuthService_GetUser
      parameters:
      - in: path
        name: userID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUserResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
  /api/auth/v1/userinfo:
    get:
      operationId: AuthService_GetUserInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUserInfoResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: User API
      tags:
      - AuthService
  /api/auth/v1/users:
    get:
      operationId: AuthService_GetUsers
      parameters:
      - in: query
        name: offset
        schema:
          format: int64
          type: string
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUsersResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      tags:
      - AuthService
  /api/func/v1/call-sync/{id}:
    post:
      operationId: FunctionsService_CallSyncFunction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/functionsCallFunctionResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Call a function synchroniously
      tags:
      - FunctionsService
      x-codegen-request-body-name: body
  /api/func/v1/call-test/{id}:
    post:
      operationId: FunctionsService_CallTestFunction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/functionsCallFunctionResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Test a function call
      tags:
      - FunctionsService
      x-codegen-request-body-name: body
  /api/func/v1/function:
    post:
      operationId: FunctionsService_CreateFunction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/functionsCreateFunctionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/functionsCreateFunctionResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Create function
      tags:
      - FunctionsService
      x-codegen-request-body-name: body
    put:
      operationId: FunctionsService_UpdateFunction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/functionsFunction'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/functionsUpdateFunctionResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Update function
      tags:
      - FunctionsService
      x-codegen-request-body-name: body
  /api/func/v1/function/{function.id}:
    patch:
      operationId: FunctionsService_UpdateFunction2
      parameters:
      - in: path
        name: function.id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/functionsFunction'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/functionsUpdateFunctionResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Update function
      tags:
      - FunctionsService
      x-codegen-request-body-name: body
  /api/func/v1/function/{id}:
    delete:
      operationId: FunctionsService_DeleteFunction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/functionsDeleteFunctionResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Delete function
      tags:
      - FunctionsService
    get:
      operationId: FunctionsService_GetFunction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/functionsGetFunctionResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Get function
      tags:
      - FunctionsService
  /api/func/v1/functions:
    get:
      operationId: FunctionsService_GetFunctions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/functionsGetFunctionsResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Fetch all functions
      tags:
      - FunctionsService
  /api/func/v1/post-call/{reason}/{call.id}:
    post:
      operationId: FunctionsService_CallAsyncFunction
      parameters:
      - in: path
        name: reason
        required: true
        schema:
          type: string
      - in: path
        name: call.id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/functionsCallAsyncFunctionResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Post function for execution in async way
      tags:
      - FunctionsService
      x-codegen-request-body-name: body
  /api/distribution/v1/app:
    post:
      operationId: DistrConfigService_CreateApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigMobileApp'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigCreateAppResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Create mobile application
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
  /api/distribution/v1/app/pools/assign:
    post:
      operationId: DistrConfigService_AssignPoolsToApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigAssignPoolsToAppRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigAssignPoolsToAppResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Assign data pools to mobile application
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
  /api/distribution/v1/app/pools/unassign:
    post:
      operationId: DistrConfigService_UnassignPoolsFromApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigUnassignPoolsFromAppRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigUnassignPoolsFromAppResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Unassign data pool from mobile application
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
  /api/distribution/v1/app/users/assign:
    post:
      operationId: DistrConfigService_AssignAppToUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigAssignAppToUsersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigAssignAppToUsersResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Assign mobile application to users
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
  /api/distribution/v1/app/users/unassign:
    post:
      operationId: DistrConfigService_UnassignAppFromUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigUnassignAppFromUsersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigUnassignAppFromUsersResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Unassign mobile application from users
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
  /api/distribution/v1/app/{id}:
    delete:
      operationId: DistrConfigService_DeleteApp
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigDeleteAppResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Delete mobile application
      tags:
      - DistrConfigService
    get:
      operationId: DistrConfigService_GetApp
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigGetAppResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Get a mobile application
      tags:
      - DistrConfigService
  /api/distribution/v1/app/{id}/bundle:
    post:
      operationId: DistrConfigService_SetAppBundle
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigSetAppBundleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigSetAppBundleResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Set the mobile application bundle
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
  /api/distribution/v1/apps:
    get:
      operationId: DistrConfigService_GetApps
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigGetAppsResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Get all mobile applications
      tags:
      - DistrConfigService
  /api/distribution/v1/pool:
    post:
      description: |-
        Errors:
        - 400    Returned when no valid pool definition is provided in the request
        - 403    Returned when the caller is not allowed to perform this call
        - 500    Returned whenever an internall error occurs
      operationId: DistrConfigService_CreatePool
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigDataPool'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigCreatePoolResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Create a data pool that can be used to distribute data to mobile users.
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
    put:
      description: |-
        Errors:
        - 400    Returned when no valid pool definition is provided in the request
        - 404    Returned when a pool with the given ID does not exist
        - 403    Returned when the caller is not allowed to perform this call
        - 500    Returned whenever an internall error occurs
      operationId: DistrConfigService_UpdatePool
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigDataPool'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigUpdatePoolResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Update an already existing data pool.
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
  /api/distribution/v1/pool/activate:
    post:
      description: "Errors:\n- 400    Returned when no valid pool ID is provided in\
        \ the request, or \n         when the pool is already active\n- 403    Returned\
        \ when the caller is not allowed to perform this call\n- 500    Returned whenever\
        \ an internall error occurs"
      operationId: DistrConfigService_ActivatePool
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigActivatePoolRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigActivatePoolResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: "Activate data pool, which will enable the distribution of its data\
        \ to \nmobile users."
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
  /api/distribution/v1/pool/distribution/{id}:
    get:
      description: |-
        Errors:
        - 400    Returned when no valid pool ID is provided in the request
        - 403    Returned when the caller is not allowed to perform this call
        - 500    Returned whenever an internall error occurs
      operationId: DistrConfigService_GetPoolDistribution
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: userId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigGetPoolDistributionResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Get the data distribution details for the pool.
      tags:
      - DistrConfigService
  /api/distribution/v1/pool/validate:
    post:
      description: |-
        Errors:
        - 400    Returned when no valid pool definition is provided in the request
        - 403    Returned when the caller is not allowed to perform this call
        - 500    Returned whenever an internall error occurs
      operationId: DistrConfigService_ValidatePoolData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigValidatePoolDataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigValidatePoolDataResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Validate pool data against pool specification
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
  /api/distribution/v1/pool/{dataPool.id}:
    patch:
      description: |-
        Errors:
        - 400    Returned when no valid pool definition is provided in the request
        - 404    Returned when a pool with the given ID does not exist
        - 403    Returned when the caller is not allowed to perform this call
        - 500    Returned whenever an internall error occurs
      operationId: DistrConfigService_UpdatePool2
      parameters:
      - description: Primary key together with accountId - should be unique by client
          - used also as name of the pool
        in: path
        name: dataPool.id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigDataPool'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigUpdatePoolResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Update an already existing data pool.
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
  /api/distribution/v1/pool/{id}:
    delete:
      description: |-
        Errors:
        - 400    Returned when no valid pool ID is provided in the request
        - 403    Returned when the caller is not allowed to perform this call
        - 500    Returned whenever an internall error occurs
      operationId: DistrConfigService_DeletePool
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigDeletePoolResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: "Delete data pool with all its data from the system and the mobile\
        \ users' \ndevices."
      tags:
      - DistrConfigService
    get:
      description: |-
        Errors:
        - 400    Returned when no valid pool ID is provided in the request
        - 403    Returned when the caller is not allowed to perform this call
        - 500    Returned whenever an internall error occurs
      operationId: DistrConfigService_GetPool
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigGetPoolResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Get the data pool with the given ID.
      tags:
      - DistrConfigService
  /api/distribution/v1/pools:
    get:
      description: |-
        Errors:
        - 403    Returned when the caller is not allowed to perform this call
        - 500    Returned whenever an internall error occurs
      operationId: DistrConfigService_GetPools
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigGetPoolsResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Get the list of all data pool that have been created in the system.
      tags:
      - DistrConfigService
    post:
      description: |-
        Errors:
        - 400    Returned when no valid pool definitions are provided in the request
        - 403    Returned when the caller is not allowed to perform this call
        - 500    Returned whenever an internall error occurs
      operationId: DistrConfigService_CreatePools
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigCreatePoolsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigCreatePoolsResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Create several data pools, which can be used to distribute data to
        mobile users.
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
  /api/distribution/v1/user:
    post:
      operationId: DistrConfigService_CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigCreateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigCreateUserResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Registers user in distribution database
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
  /api/distribution/v1/user/tags/assign:
    post:
      operationId: DistrConfigService_AssignTagToUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigAssignTagToUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigAssignTagToUserResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Assign filtering tag to user
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
  /api/distribution/v1/user/tags/unassign:
    post:
      operationId: DistrConfigService_UnassignTagFromUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distrconfigUnassignTagFromUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigUnassignTagFromUserResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Unassign filtering tag from user
      tags:
      - DistrConfigService
      x-codegen-request-body-name: body
  /api/distribution/v1/user/{id}:
    delete:
      operationId: DistrConfigService_DeleteUser
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigDeleteUserResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Deletes user from distribution db
      tags:
      - DistrConfigService
  /api/distribution/v1/user/{userID}:
    get:
      operationId: DistrConfigService_GetUser
      parameters:
      - in: path
        name: userID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigGetUserResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Fetch the user with the given ID
      tags:
      - DistrConfigService
  /api/distribution/v1/users:
    get:
      operationId: DistrConfigService_GetUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distrconfigGetUsersResponse'
          description: A successful response.
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response
      summary: Fetch all users in account distribution db
      tags:
      - DistrConfigService
  /api/data/_r/{poolId}:
    delete:
      operationId: PoolDataService_BulkDelete
      parameters:
      - description: Pool ID (e.g. orders)
        in: path
        name: poolId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dataBulkDeleteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataBulkDeleteResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when input parameters are not provided
      summary: Bulk delete records from mobile data pool
      tags:
      - PoolDataService
      x-codegen-request-body-name: body
    get:
      operationId: PoolDataService_List
      parameters:
      - description: Pool ID (e.g. orders)
        in: path
        name: poolId
        required: true
        schema:
          type: string
      - description: The max number of records to fetch.
        in: query
        name: limit
        required: true
        schema:
          type: number
      - description: The records to skip from the beggining
        in: query
        name: skip
        required: true
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataListResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when input parameters are not provided or correct
      summary: List mobile data records
      tags:
      - PoolDataService
    post:
      operationId: PoolDataService_BulkCreate
      parameters:
      - description: Pool ID (e.g. orders)
        in: path
        name: poolId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dataBulkCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataBulkCreateResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when input parameters are not provided
      summary: Bulk create mobile data records in a pool
      tags:
      - PoolDataService
      x-codegen-request-body-name: body
    put:
      operationId: PoolDataService_BulkUpdate
      parameters:
      - description: Pool ID (e.g. orders)
        in: path
        name: poolId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dataBulkUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataBulkUpdateResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when input parameters are not provided
      summary: Bulk update records in mobile data pool
      tags:
      - PoolDataService
      x-codegen-request-body-name: body
  /api/data/_r/{poolId}/{id}:
    get:
      operationId: PoolDataService_Get
      parameters:
      - description: Pool ID (e.g. orders)
        in: path
        name: poolId
        required: true
        schema:
          type: string
      - description: The ID (Primary Key) of the record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataGetResponse'
          description: A successful response.
        "400":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when input parameters are not provided
        "404":
          content:
            application/json:
              schema:
                format: string
                type: string
          description: Returned when the document does not exist.
      summary: Get single mobile data record
      tags:
      - PoolDataService
components:
  schemas:
    AccountAccountStatus:
      default: PENDING
      enum:
      - PENDING
      - ACTIVE
      - DISABLED
      - DELETED
      type: string
    PaymentDetailsPaymentType:
      default: CreditCard
      enum:
      - CreditCard
      - Paypal
      - DirectDebig
      - Invoice
      type: string
    protobufAny:
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }

         Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

         Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := ptypes.MarshalAny(foo)
             ...
             foo := &pb.Foo{}
             if err := ptypes.UnmarshalAny(any, foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".


        JSON
        ====
        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
      properties:
        type_url:
          description: |-
            A URL/resource name whose content describes the type of the
            serialized protocol buffer message.

            For URLs which use the scheme `http`, `https`, or no scheme, the
            following restrictions and interpretations apply:

            * If no scheme is provided, `https` is assumed.
            * The last segment of the URL's path must represent the fully
              qualified name of the type (as in `path/google.protobuf.Duration`).
              The name should be in a canonical form (e.g., leading "." is
              not accepted).
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
          type: string
        value:
          description: Must be a valid serialized protocol buffer of the above specified
            type.
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
      type: object
    runtimeError:
      properties:
        error:
          type: string
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
      type: object
    v1AccessKey:
      example:
        accessKeyID: accessKeyID
        lastUsedAt: lastUsedAt
      properties:
        accessKeyID:
          type: string
        lastUsedAt:
          format: int64
          type: string
      type: object
    v1Account:
      example:
        accountID: accountID
        name: name
        description: description
        paymentDetails:
          info: info
        contactDetails:
          technical: technical
          main: main
          finance: finance
      properties:
        accountID:
          format: int64
          type: string
        name:
          type: string
        description:
          type: string
        status:
          $ref: '#/components/schemas/AccountAccountStatus'
        paymentDetails:
          $ref: '#/components/schemas/v1PaymentDetails'
        contactDetails:
          $ref: '#/components/schemas/v1ContactDetails'
      type: object
    v1Action:
      example:
        call: call
        service: service
      properties:
        service:
          type: string
        call:
          type: string
      type: object
    v1AddPoliciesToRoleRequest:
      properties:
        roleID:
          type: string
        policyIDs:
          items:
            type: string
          type: array
      type: object
    v1AddPoliciesToRoleResponse:
      example:
        failedPolicyIDs:
        - failedPolicyIDs
        - failedPolicyIDs
      properties:
        failedPolicyIDs:
          items:
            type: string
          type: array
      type: object
    v1AddPoliciesToUserRequest:
      properties:
        userID:
          type: string
        policyIDs:
          items:
            type: string
          type: array
      type: object
    v1AddPoliciesToUserResponse:
      example:
        failedPolicyIDs:
        - failedPolicyIDs
        - failedPolicyIDs
      properties:
        failedPolicyIDs:
          items:
            type: string
          type: array
      type: object
    v1AddUsersToRoleRequest:
      properties:
        roleID:
          type: string
        userIDs:
          items:
            type: string
          type: array
      type: object
    v1AddUsersToRoleResponse:
      example:
        failedUserIDs:
        - failedUserIDs
        - failedUserIDs
      properties:
        failedUserIDs:
          items:
            type: string
          type: array
      type: object
    v1CheckHMACAuthRequest:
      properties:
        httpMethod:
          type: string
        requestPath:
          type: string
        contentType:
          type: string
        authKey:
          type: string
        signature:
          type: string
        md5Body:
          type: string
        validity:
          format: int64
          type: string
      type: object
    v1CheckHMACAuthResponse:
      example:
        error: error
        token: token
      properties:
        token:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        error:
          type: string
      type: object
    v1CheckTokenAuthRequest:
      properties:
        authKey:
          type: string
        signature:
          type: string
        validity:
          format: int64
          type: string
      type: object
    v1CheckTokenAuthResponse:
      example:
        error: error
        token: token
      properties:
        token:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        error:
          type: string
      type: object
    v1ContactDetails:
      example:
        technical: technical
        main: main
        finance: finance
      properties:
        main:
          type: string
        finance:
          type: string
        technical:
          type: string
      type: object
    v1CreateAccessKeyRequest:
      properties:
        userID:
          type: string
      type: object
    v1CreateAccessKeyResponse:
      example:
        accessKeyID: accessKeyID
        accessSecret: accessSecret
      properties:
        accessKeyID:
          type: string
        accessSecret:
          type: string
      type: object
    v1CreateAccountResponse:
      properties:
        accountID:
          format: int64
          type: string
      type: object
    v1CreateClientRequest:
      properties:
        suffix:
          type: string
        redirect_uri:
          type: string
        description:
          type: string
        base_color:
          type: string
      type: object
    v1CreateClientResponse:
      example:
        client:
          description: description
          id: id
          secret: secret
          redirect_uri: redirect_uri
          base_color: base_color
      properties:
        client:
          $ref: '#/components/schemas/v1OIDCClient'
      type: object
    v1CreatePolicyRequest:
      properties:
        policy:
          $ref: '#/components/schemas/v1Policy'
      type: object
    v1CreatePolicyResponse:
      example:
        policyID: policyID
      properties:
        policyID:
          type: string
      type: object
    v1CreateRoleRequest:
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    v1CreateRoleResponse:
      example:
        roleID: roleID
      properties:
        roleID:
          type: string
      type: object
    v1CreateUserRequest:
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      type: object
    v1CreateUserResponse:
      example:
        userID: userID
      properties:
        userID:
          type: string
      type: object
    v1DeleteAccessKeyResponse:
      type: object
    v1DeleteAccountResponse:
      type: object
    v1DeleteClientResponse:
      type: object
    v1DeletePolicyResponse:
      type: object
    v1DeleteRoleResponse:
      type: object
    v1DeleteUserResponse:
      type: object
    v1GetAccountResponse:
      example:
        account:
          accountID: accountID
          name: name
          description: description
          paymentDetails:
            info: info
          contactDetails:
            technical: technical
            main: main
            finance: finance
      properties:
        account:
          $ref: '#/components/schemas/v1Account'
      type: object
    v1GetClientsResponse:
      example:
        client:
        - description: description
          id: id
          secret: secret
          redirect_uri: redirect_uri
          base_color: base_color
        - description: description
          id: id
          secret: secret
          redirect_uri: redirect_uri
          base_color: base_color
      properties:
        client:
          items:
            $ref: '#/components/schemas/v1OIDCClient'
          type: array
      type: object
    v1GetDefaultPoliciesResponse:
      example:
        policies:
        - policyID: policyID
          permissions:
          - effect: effect
            scope:
            - scope
            - scope
            actions:
            - call: call
              service: service
            - call: call
              service: service
          - effect: effect
            scope:
            - scope
            - scope
            actions:
            - call: call
              service: service
            - call: call
              service: service
          name: name
        - policyID: policyID
          permissions:
          - effect: effect
            scope:
            - scope
            - scope
            actions:
            - call: call
              service: service
            - call: call
              service: service
          - effect: effect
            scope:
            - scope
            - scope
            actions:
            - call: call
              service: service
            - call: call
              service: service
          name: name
      properties:
        policies:
          items:
            $ref: '#/components/schemas/v1Policy'
          type: array
      type: object
    v1GetPasswordPolicyResponse:
      example:
        policy:
          useNumbers: true
          useLowerLetters: true
          minLength: minLength
          useUpperLetters: true
          useSpecialCharecters: true
      properties:
        policy:
          $ref: '#/components/schemas/v1PasswordPolicy'
      type: object
    v1GetPoliciesResponse:
      example:
        policies:
        - policyID: policyID
          permissions:
          - effect: effect
            scope:
            - scope
            - scope
            actions:
            - call: call
              service: service
            - call: call
              service: service
          - effect: effect
            scope:
            - scope
            - scope
            actions:
            - call: call
              service: service
            - call: call
              service: service
          name: name
        - policyID: policyID
          permissions:
          - effect: effect
            scope:
            - scope
            - scope
            actions:
            - call: call
              service: service
            - call: call
              service: service
          - effect: effect
            scope:
            - scope
            - scope
            actions:
            - call: call
              service: service
            - call: call
              service: service
          name: name
      properties:
        policies:
          items:
            $ref: '#/components/schemas/v1Policy'
          type: array
      type: object
    v1GetPolicyResponse:
      example:
        policy:
          policyID: policyID
          permissions:
          - effect: effect
            scope:
            - scope
            - scope
            actions:
            - call: call
              service: service
            - call: call
              service: service
          - effect: effect
            scope:
            - scope
            - scope
            actions:
            - call: call
              service: service
            - call: call
              service: service
          name: name
      properties:
        policy:
          $ref: '#/components/schemas/v1Policy'
      type: object
    v1GetRoleResponse:
      example:
        role:
          roleID: roleID
          name: name
          description: description
          policyIDs:
          - policyIDs
          - policyIDs
      properties:
        role:
          $ref: '#/components/schemas/v1Role'
      type: object
    v1GetRolesResponse:
      example:
        roles:
        - roleID: roleID
          name: name
          description: description
          policyIDs:
          - policyIDs
          - policyIDs
        - roleID: roleID
          name: name
          description: description
          policyIDs:
          - policyIDs
          - policyIDs
      properties:
        roles:
          items:
            $ref: '#/components/schemas/v1Role'
          type: array
      type: object
    v1GetUserAccessKeysResponse:
      example:
        keys:
        - accessKeyID: accessKeyID
          lastUsedAt: lastUsedAt
        - accessKeyID: accessKeyID
          lastUsedAt: lastUsedAt
      properties:
        keys:
          items:
            $ref: '#/components/schemas/v1AccessKey'
          type: array
      type: object
    v1GetUserIDByEmailResponse:
      example:
        userID: userID
      properties:
        userID:
          type: string
      type: object
    v1GetUserInfoResponse:
      example:
        userInfo:
          accountID: accountID
          name: name
          policies:
          - policyID: policyID
            permissions:
            - effect: effect
              scope:
              - scope
              - scope
              actions:
              - call: call
                service: service
              - call: call
                service: service
            - effect: effect
              scope:
              - scope
              - scope
              actions:
              - call: call
                service: service
              - call: call
                service: service
            name: name
          - policyID: policyID
            permissions:
            - effect: effect
              scope:
              - scope
              - scope
              actions:
              - call: call
                service: service
              - call: call
                service: service
            - effect: effect
              scope:
              - scope
              - scope
              actions:
              - call: call
                service: service
              - call: call
                service: service
            name: name
          userID: userID
          email: email
      properties:
        userInfo:
          $ref: '#/components/schemas/v1UserInfo'
      type: object
    v1GetUserResponse:
      example:
        user:
          firstName: firstName
          lastName: lastName
          lastLogin: lastLogin
          phoneNumber: phoneNumber
          roleIDs:
          - roleIDs
          - roleIDs
          language: language
          policyIDs:
          - policyIDs
          - policyIDs
          userID: userID
          email: email
      properties:
        user:
          $ref: '#/components/schemas/v1User'
      type: object
    v1GetUsersForRoleResponse:
      example:
        userIDs:
        - userIDs
        - userIDs
      properties:
        userIDs:
          items:
            type: string
          type: array
      type: object
    v1GetUsersResponse:
      example:
        offset: offset
        limit: 0
        totalRows: totalRows
        users:
        - firstName: firstName
          lastName: lastName
          lastLogin: lastLogin
          phoneNumber: phoneNumber
          roleIDs:
          - roleIDs
          - roleIDs
          language: language
          policyIDs:
          - policyIDs
          - policyIDs
          userID: userID
          email: email
        - firstName: firstName
          lastName: lastName
          lastLogin: lastLogin
          phoneNumber: phoneNumber
          roleIDs:
          - roleIDs
          - roleIDs
          language: language
          policyIDs:
          - policyIDs
          - policyIDs
          userID: userID
          email: email
      properties:
        totalRows:
          format: int64
          type: string
        offset:
          format: int64
          type: string
        limit:
          format: int32
          type: integer
        users:
          items:
            $ref: '#/components/schemas/v1User'
          title: string offsetID = 4
          type: array
      type: object
    v1OIDCClient:
      example:
        description: description
        id: id
        secret: secret
        redirect_uri: redirect_uri
        base_color: base_color
      properties:
        id:
          type: string
        secret:
          type: string
        redirect_uri:
          type: string
        description:
          type: string
        base_color:
          type: string
      type: object
    v1PasswordPolicy:
      example:
        useNumbers: true
        useLowerLetters: true
        minLength: minLength
        useUpperLetters: true
        useSpecialCharecters: true
      properties:
        minLength:
          format: int64
          type: string
        useLowerLetters:
          format: boolean
          type: boolean
        useUpperLetters:
          format: boolean
          type: boolean
        useNumbers:
          format: boolean
          type: boolean
        useSpecialCharecters:
          format: boolean
          type: boolean
      type: object
    v1PaymentDetails:
      example:
        info: info
      properties:
        type:
          $ref: '#/components/schemas/PaymentDetailsPaymentType'
        info:
          type: string
      type: object
    v1Permission:
      example:
        effect: effect
        scope:
        - scope
        - scope
        actions:
        - call: call
          service: service
        - call: call
          service: service
      properties:
        effect:
          type: string
        actions:
          items:
            $ref: '#/components/schemas/v1Action'
          type: array
        scope:
          items:
            type: string
          type: array
      type: object
    v1Policy:
      example:
        policyID: policyID
        permissions:
        - effect: effect
          scope:
          - scope
          - scope
          actions:
          - call: call
            service: service
          - call: call
            service: service
        - effect: effect
          scope:
          - scope
          - scope
          actions:
          - call: call
            service: service
          - call: call
            service: service
        name: name
      properties:
        policyID:
          type: string
        name:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/v1Permission'
          type: array
      type: object
    v1RemovePoliciesFromRoleRequest:
      properties:
        roleID:
          type: string
        policyIDs:
          items:
            type: string
          type: array
      type: object
    v1RemovePoliciesFromRoleResponse:
      example:
        failedPolicyIDs:
        - failedPolicyIDs
        - failedPolicyIDs
      properties:
        failedPolicyIDs:
          items:
            type: string
          type: array
      type: object
    v1RemovePoliciesFromUserRequest:
      properties:
        userID:
          type: string
        policyIDs:
          items:
            type: string
          type: array
      type: object
    v1RemovePoliciesFromUserResponse:
      example:
        failedPolicyIDs:
        - failedPolicyIDs
        - failedPolicyIDs
      properties:
        failedPolicyIDs:
          items:
            type: string
          type: array
      type: object
    v1RemoveUsersFromRoleRequest:
      properties:
        roleID:
          type: string
        userIDs:
          items:
            type: string
          type: array
      type: object
    v1RemoveUsersFromRoleResponse:
      example:
        failedUserIDs:
        - failedUserIDs
        - failedUserIDs
      properties:
        failedUserIDs:
          items:
            type: string
          type: array
      type: object
    v1ResetPasswordRequest:
      properties:
        userID:
          type: string
      type: object
    v1ResetPasswordResponse:
      type: object
    v1Role:
      example:
        roleID: roleID
        name: name
        description: description
        policyIDs:
        - policyIDs
        - policyIDs
      properties:
        roleID:
          type: string
        name:
          type: string
        description:
          type: string
        policyIDs:
          items:
            type: string
          type: array
      type: object
    v1RoleUpdate:
      properties:
        roleID:
          type: string
        name:
          type: string
        description:
          type: string
      type: object
    v1SetPasswordRequest:
      properties:
        userID:
          type: string
        userPassword:
          type: string
        newPassword:
          type: string
      type: object
    v1SetPasswordResponse:
      type: object
    v1UpdateAccountRequest:
      properties:
        account:
          $ref: '#/components/schemas/v1Account'
      type: object
    v1UpdateAccountResponse:
      type: object
    v1UpdateClientRequest:
      properties:
        id:
          type: string
        description:
          type: string
        redirect_uri:
          type: string
        base_color:
          type: string
      type: object
    v1UpdateClientResponse:
      example:
        client:
          description: description
          id: id
          secret: secret
          redirect_uri: redirect_uri
          base_color: base_color
      properties:
        client:
          $ref: '#/components/schemas/v1OIDCClient'
      type: object
    v1UpdatePolicyRequest:
      properties:
        policy:
          $ref: '#/components/schemas/v1Policy'
      type: object
    v1UpdatePolicyResponse:
      type: object
    v1UpdateRoleRequest:
      properties:
        role:
          $ref: '#/components/schemas/v1RoleUpdate'
      type: object
    v1UpdateRoleResponse:
      type: object
    v1UpdateUserRequest:
      properties:
        user:
          $ref: '#/components/schemas/v1UserUpdate'
      type: object
    v1UpdateUserResponse:
      type: object
    v1User:
      example:
        firstName: firstName
        lastName: lastName
        lastLogin: lastLogin
        phoneNumber: phoneNumber
        roleIDs:
        - roleIDs
        - roleIDs
        language: language
        policyIDs:
        - policyIDs
        - policyIDs
        userID: userID
        email: email
      properties:
        userID:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        language:
          type: string
        lastLogin:
          format: int64
          type: string
        policyIDs:
          items:
            type: string
          type: array
        roleIDs:
          items:
            type: string
          type: array
      type: object
    v1UserInfo:
      example:
        accountID: accountID
        name: name
        policies:
        - policyID: policyID
          permissions:
          - effect: effect
            scope:
            - scope
            - scope
            actions:
            - call: call
              service: service
            - call: call
              service: service
          - effect: effect
            scope:
            - scope
            - scope
            actions:
            - call: call
              service: service
            - call: call
              service: service
          name: name
        - policyID: policyID
          permissions:
          - effect: effect
            scope:
            - scope
            - scope
            actions:
            - call: call
              service: service
            - call: call
              service: service
          - effect: effect
            scope:
            - scope
            - scope
            actions:
            - call: call
              service: service
            - call: call
              service: service
          name: name
        userID: userID
        email: email
      properties:
        accountID:
          format: int64
          type: string
        userID:
          type: string
        email:
          type: string
        name:
          type: string
        policies:
          items:
            $ref: '#/components/schemas/v1Policy'
          type: array
      type: object
    v1UserUpdate:
      properties:
        userID:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        language:
          type: string
      type: object
    functionsCallAsyncFunctionRequest:
      properties:
        call:
          $ref: '#/components/schemas/functionsCallFunctionRequest'
        reason:
          type: string
      type: object
    functionsCallAsyncFunctionResponse:
      type: object
    functionsCallFunctionRequest:
      properties:
        id:
          type: string
        payload:
          properties: {}
          type: object
        payloadJSON:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
      type: object
    functionsCallFunctionResponse:
      example:
        err: err
        success: true
        body: '{}'
      properties:
        success:
          format: boolean
          type: boolean
        err:
          type: string
        body:
          properties: {}
          type: object
      type: object
    functionsCaller:
      properties:
        accountID:
          format: int64
          type: string
        userID:
          type: string
        email:
          type: string
        policies:
          type: string
      type: object
    functionsCreateFunctionRequest:
      properties:
        name:
          type: string
        funcType:
          type: string
        endpoint:
          type: string
        region:
          type: string
      type: object
    functionsCreateFunctionResponse:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    functionsDeleteFunctionResponse:
      type: object
    functionsFunction:
      example:
        endpoint: endpoint
        name: name
        id: id
        region: region
        funcType: funcType
      properties:
        id:
          type: string
        name:
          type: string
        funcType:
          type: string
        endpoint:
          type: string
        region:
          type: string
      type: object
    functionsGetFunctionResponse:
      example:
        function:
          endpoint: endpoint
          name: name
          id: id
          region: region
          funcType: funcType
      properties:
        function:
          $ref: '#/components/schemas/functionsFunction'
      type: object
    functionsGetFunctionsResponse:
      example:
        functions:
        - endpoint: endpoint
          name: name
          id: id
          region: region
          funcType: funcType
        - endpoint: endpoint
          name: name
          id: id
          region: region
          funcType: funcType
      properties:
        functions:
          items:
            $ref: '#/components/schemas/functionsFunction'
          type: array
      type: object
    functionsUpdateFunctionResponse:
      type: object
    protobufNullValue:
      default: NULL_VALUE
      description: |-
        `NullValue` is a singleton enumeration to represent the null value for the
        `Value` type union.

         The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
      enum:
      - NULL_VALUE
      type: string
    distrconfigActivatePoolRequest:
      properties:
        id:
          type: string
      type: object
    distrconfigActivatePoolResponse:
      type: object
    distrconfigAssignAppToUsersRequest:
      properties:
        appID:
          type: string
        userIDs:
          items:
            type: string
          type: array
      type: object
    distrconfigAssignAppToUsersResponse:
      example:
        failedUserIDs:
        - failedUserIDs
        - failedUserIDs
      properties:
        failedUserIDs:
          items:
            type: string
          type: array
      type: object
    distrconfigAssignPoolsToAppRequest:
      properties:
        appID:
          type: string
        poolIDs:
          items:
            type: string
          type: array
      type: object
    distrconfigAssignPoolsToAppResponse:
      example:
        failedPoolIDs:
        - failedPoolIDs
        - failedPoolIDs
      properties:
        failedPoolIDs:
          items:
            type: string
          type: array
      type: object
    distrconfigAssignTagToUserRequest:
      properties:
        poolID:
          type: string
        userID:
          type: string
        tagValue:
          type: string
      type: object
    distrconfigAssignTagToUserResponse:
      type: object
    distrconfigCreateAppResponse:
      type: object
    distrconfigCreatePoolResponse:
      title: Contains data of createPoold data pool task
      type: object
    distrconfigCreatePoolsRequest:
      properties:
        dataPools:
          items:
            $ref: '#/components/schemas/distrconfigDataPool'
          type: array
      type: object
    distrconfigCreatePoolsResponse:
      title: Contains data of createPoold data pool task
      type: object
    distrconfigCreateUserRequest:
      properties:
        id:
          type: string
      type: object
    distrconfigCreateUserResponse:
      type: object
    distrconfigDataPool:
      example:
        schema: schema
        active: true
        onUploadFunction: onUploadFunction
        tagExtractExpression: tagExtractExpression
        id: id
        pkExtractExpression: pkExtractExpression
      properties:
        id:
          title: Primary key together with accountId - should be unique by client
            - used also as name of the pool
          type: string
        poolType:
          $ref: '#/components/schemas/distrconfigPoolType'
        pkExtractExpression:
          title: http://goessner.net/articles/JsonPath/ expression to extract the
            primary key
          type: string
        tagExtractExpression:
          title: http://goessner.net/articles/JsonPath/ expression to extract tags
            from the documents. For user type pools this is the user id
          type: string
        active:
          format: boolean
          title: When activated it locks the record and cannot be changed
          type: boolean
        schema:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          title: If set - should contain http://json-schema.org/ schema, that will
            validate every document
          type: string
        onUploadFunction:
          title: Function to be called onUpload
          type: string
      type: object
    distrconfigDeleteAppResponse:
      type: object
    distrconfigDeletePoolResponse:
      type: object
    distrconfigDeleteUserResponse:
      type: object
    distrconfigDistributionUser:
      example:
        tagAssignments:
        - poolID: poolID
          value: value
        - poolID: poolID
          value: value
        id: id
        activeAppID: activeAppID
      properties:
        id:
          type: string
        activeAppID:
          type: string
        tagAssignments:
          items:
            $ref: '#/components/schemas/distrconfigUserTagAssignment'
          type: array
      type: object
    distrconfigGetAppResponse:
      example:
        app:
          bundleUrl: bundleUrl
          assignedPools:
          - assignedPools
          - assignedPools
          active: true
          id: id
      properties:
        app:
          $ref: '#/components/schemas/distrconfigMobileAppWithPools'
      type: object
    distrconfigGetAppsResponse:
      example:
        apps:
        - bundleUrl: bundleUrl
          assignedPools:
          - assignedPools
          - assignedPools
          active: true
          id: id
        - bundleUrl: bundleUrl
          assignedPools:
          - assignedPools
          - assignedPools
          active: true
          id: id
      properties:
        apps:
          items:
            $ref: '#/components/schemas/distrconfigMobileAppWithPools'
          type: array
      type: object
    distrconfigGetPoolDistributionResponse:
      example:
        tagPrefix: tagPrefix
        dbUrl: dbUrl
      properties:
        dbUrl:
          type: string
        poolType:
          $ref: '#/components/schemas/distrconfigPoolType'
        tagPrefix:
          title: Tag prefix used for determining if user assignments match the record
          type: string
      type: object
    distrconfigGetPoolResponse:
      example:
        dataPool:
          schema: schema
          active: true
          onUploadFunction: onUploadFunction
          tagExtractExpression: tagExtractExpression
          id: id
          pkExtractExpression: pkExtractExpression
      properties:
        dataPool:
          $ref: '#/components/schemas/distrconfigDataPool'
      title: Contains data pool task data specified in by ID request
      type: object
    distrconfigGetPoolsResponse:
      example:
        poolSizes:
          key:
            userDataSizeBytes: userDataSizeBytes
            poolID: poolID
            globalDataSizeBytes: globalDataSizeBytes
        dataPool:
        - schema: schema
          active: true
          onUploadFunction: onUploadFunction
          tagExtractExpression: tagExtractExpression
          id: id
          pkExtractExpression: pkExtractExpression
        - schema: schema
          active: true
          onUploadFunction: onUploadFunction
          tagExtractExpression: tagExtractExpression
          id: id
          pkExtractExpression: pkExtractExpression
      properties:
        dataPool:
          items:
            $ref: '#/components/schemas/distrconfigDataPool'
          title: List of all data pool tasks
          type: array
        poolSizes:
          additionalProperties:
            $ref: '#/components/schemas/distrconfigPoolSize'
          type: object
      title: Contains list of all data pool tasks
      type: object
    distrconfigGetUserResponse:
      example:
        user:
          tagAssignments:
          - poolID: poolID
            value: value
          - poolID: poolID
            value: value
          id: id
          activeAppID: activeAppID
      properties:
        user:
          $ref: '#/components/schemas/distrconfigDistributionUser'
      type: object
    distrconfigGetUsersResponse:
      example:
        users:
        - tagAssignments:
          - poolID: poolID
            value: value
          - poolID: poolID
            value: value
          id: id
          activeAppID: activeAppID
        - tagAssignments:
          - poolID: poolID
            value: value
          - poolID: poolID
            value: value
          id: id
          activeAppID: activeAppID
      properties:
        users:
          items:
            $ref: '#/components/schemas/distrconfigDistributionUser'
          type: array
      type: object
    distrconfigMobileApp:
      properties:
        id:
          title: Primary key - unique by account
          type: string
        bundleUrl:
          title: Bundle URL for downloading the react bundle
          type: string
        active:
          format: boolean
          type: boolean
      type: object
    distrconfigMobileAppWithPools:
      example:
        bundleUrl: bundleUrl
        assignedPools:
        - assignedPools
        - assignedPools
        active: true
        id: id
      properties:
        id:
          type: string
        bundleUrl:
          type: string
        active:
          format: boolean
          type: boolean
        assignedPools:
          items:
            type: string
          type: array
      type: object
    distrconfigPoolSize:
      example:
        userDataSizeBytes: userDataSizeBytes
        poolID: poolID
        globalDataSizeBytes: globalDataSizeBytes
      properties:
        poolID:
          type: string
        globalDataSizeBytes:
          format: int64
          type: string
        userDataSizeBytes:
          format: int64
          type: string
      type: object
    distrconfigPoolType:
      default: UNKNOWN
      enum:
      - UNKNOWN
      - GLOBAL
      - FILTERED
      - USER
      type: string
    distrconfigSetAppBundleRequest:
      properties:
        id:
          type: string
        bundleUrl:
          type: string
      type: object
    distrconfigSetAppBundleResponse:
      type: object
    distrconfigUnassignAppFromUsersRequest:
      properties:
        appID:
          type: string
        userIDs:
          items:
            type: string
          type: array
      type: object
    distrconfigUnassignAppFromUsersResponse:
      example:
        failedUserIDs:
        - failedUserIDs
        - failedUserIDs
      properties:
        failedUserIDs:
          items:
            type: string
          type: array
      type: object
    distrconfigUnassignPoolsFromAppRequest:
      properties:
        appID:
          type: string
        poolIDs:
          items:
            type: string
          type: array
      type: object
    distrconfigUnassignPoolsFromAppResponse:
      example:
        failedPoolIDs:
        - failedPoolIDs
        - failedPoolIDs
      properties:
        failedPoolIDs:
          items:
            type: string
          type: array
      type: object
    distrconfigUnassignTagFromUserRequest:
      properties:
        poolID:
          type: string
        userID:
          type: string
        tagValue:
          type: string
      type: object
    distrconfigUnassignTagFromUserResponse:
      type: object
    distrconfigUpdatePoolResponse:
      title: Contains status of UpdatePool operation
      type: object
    distrconfigUserTagAssignment:
      example:
        poolID: poolID
        value: value
      properties:
        poolID:
          type: string
        value:
          type: string
      type: object
    distrconfigValidatePoolDataRequest:
      properties:
        poolType:
          $ref: '#/components/schemas/distrconfigPoolType'
        pkExtractExpression:
          title: http://goessner.net/articles/JsonPath/ expression to extract the
            primary key
          type: string
        tagExtractExpression:
          title: http://goessner.net/articles/JsonPath/ expression to extract tags
            from the documents. For user type pools this is the user id
          type: string
        schema:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          title: If set - should contain http://json-schema.org/ schema, that will
            validate every document
          type: string
        data:
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
      type: object
    distrconfigValidatePoolDataResponse:
      example:
        derivedTag: derivedTag
        validationErrors:
        - validationErrors
        - validationErrors
        derivedPk: derivedPk
      properties:
        derivedPk:
          type: string
        derivedTag:
          type: string
        validationErrors:
          items:
            type: string
          type: array
      type: object
    dataGetResponse:
      $ref: '#/components/schemas/dataDocument'
    dataBulkDeleteRequest:
      items:
        $ref: '#/components/schemas/dataDocument'
      type: array
    dataBulkDeleteResponse:
      example:
        result:
        - rev: rev
          id: id
        - rev: rev
          id: id
        errors:
        - errors
        - errors
      properties:
        result:
          description: Successful deletion
          items:
            $ref: '#/components/schemas/dataPersistResponse'
          type: array
        errors:
          description: List of errors if any occur
          items:
            type: string
          type: array
      type: object
    dataBulkCreateRequest:
      items:
        $ref: '#/components/schemas/dataDocument'
      type: array
    dataBulkCreateResponse:
      example:
        result:
        - rev: rev
          id: id
        - rev: rev
          id: id
        errors:
        - errors
        - errors
      properties:
        result:
          description: Successful creation
          items:
            $ref: '#/components/schemas/dataPersistResponse'
          type: array
        errors:
          description: List of errors if any occur
          items:
            type: string
          type: array
      type: object
    dataBulkUpdateRequest:
      items:
        $ref: '#/components/schemas/dataDocument'
      type: array
    dataBulkUpdateResponse:
      example:
        result:
        - rev: rev
          id: id
        - rev: rev
          id: id
        errors:
        - errors
        - errors
      properties:
        result:
          description: Successful creation
          items:
            $ref: '#/components/schemas/dataPersistResponse'
          type: array
        errors:
          description: List of errors if any occur
          items:
            type: string
          type: array
      type: object
    dataPersistResponse:
      example:
        rev: rev
        id: id
      properties:
        id:
          type: string
        rev:
          type: string
      type: object
    dataListResponse:
      example:
        offset: 6.027456183070403
        total_rows: 0.8008281904610115
        rows:
        - _rev: _rev
          _id: _id
          "...": '...'
          tags:
          - tags
          - tags
        - _rev: _rev
          _id: _id
          "...": '...'
          tags:
          - tags
          - tags
      properties:
        total_rows:
          description: The number of rows in the database
          type: number
        offset:
          description: Current offset
          type: number
        rows:
          items:
            $ref: '#/components/schemas/dataDocument'
          type: array
      type: object
    dataDocument:
      example:
        _rev: _rev
        _id: _id
        "...": '...'
        tags:
        - tags
        - tags
      properties:
        _id:
          type: string
        _rev:
          type: string
        tags:
          description: Optional field for USER and FILTERED pools.
          items:
            type: string
          type: array
        "...":
          description: Any other fields that are part of the structure
          type: string
      type: object
